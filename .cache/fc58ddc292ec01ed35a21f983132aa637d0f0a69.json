{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/activity/imports/vue/ui/posTransferInventory.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/activity/imports/vue/ui/posTransferInventory.vue","filename":"/home/snr/Desktop/Project/activity/imports/vue/ui/posTransferInventory.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/activity","root":"/home/snr/Desktop/Project/activity","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/snr/Desktop/Project/activity/imports/vue/ui/posTransferInventory.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/activity/imports/vue/ui/posTransferInventory.vue"}},"code":"var draggable;\nmodule.link(\"vuedraggable\", {\n  \"default\": function (v) {\n    draggable = v;\n  }\n}, 0);\nvar formatCurrency;\nmodule.link(\"../../../imports/api/methods/roundCurrency\", {\n  formatCurrency: function (v) {\n    formatCurrency = v;\n  }\n}, 1);\nvar GeneralFunction;\nmodule.link(\"../../../imports/api/methods/generalFunction\", {\n  GeneralFunction: function (v) {\n    GeneralFunction = v;\n  }\n}, 2);\nvar getCurrencySymbolById;\nmodule.link(\"../../../imports/api/methods/roundCurrency\", {\n  getCurrencySymbolById: function (v) {\n    getCurrencySymbolById = v;\n  }\n}, 3);\nvar WB_waterBillingSetup;\nmodule.link(\"../../collection/waterBillingSetup\", {\n  WB_waterBillingSetup: function (v) {\n    WB_waterBillingSetup = v;\n  }\n}, 4);\nvar compoLang;\nmodule.link(\"../../../both/i18n/lang/elem-label\", {\n  \"default\": function (v) {\n    compoLang = v;\n  }\n}, 5);\nvar Pos_TransferInventoryReact;\nmodule.link(\"../../collection/posTransferInventory\", {\n  Pos_TransferInventoryReact: function (v) {\n    Pos_TransferInventoryReact = v;\n  }\n}, 6);\nmodule.exportDefault({\n  meteor: {\n    langSession: function () {\n      return Session.get('lang') || \"en\";\n    },\n    disabledRemove: function () {\n      return Session.get(\"canRemove\");\n    },\n    disabledUpdate: function () {\n      return Session.get(\"canUpdate\");\n    },\n    newRe: function () {\n      var vm = this;\n      Pos_TransferInventoryReact.find({}).fetch();\n      vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n    }\n  },\n  components: {\n    draggable: draggable\n  },\n  data: function () {\n    return {\n      newLoading: true,\n      keyCode: [],\n      timeStamp: [],\n      takeBarcode: '',\n      fullscreen: true,\n      refForm: \"\",\n      posTransferInventoryData: [],\n      posTransferInventoryShowData: {},\n      posTransferInventoryDataDisplay: [],\n      multipleSelection: [],\n      posTransferInventoryId: \"\",\n      loading: false,\n      searchData: '',\n      isSearching: false,\n      currentPage: 1,\n      currentSize: 10,\n      count: 0,\n      dialogAddTransferInventory: false,\n      dialogUpdateTransferInventory: false,\n      dialogShowTransferInventory: false,\n      isDetectedDate: false,\n      posTransferInventoryForm: {\n        itemId: \"\",\n        itemName: \"\",\n        cost: 0,\n        rawQty: 0,\n        qty: 0,\n        price: 0,\n        amount: 0,\n        total: 0,\n        transferInventoryDate: moment().toDate(),\n        note: \"\",\n        desc: \"\",\n        locationFromId: \"\",\n        locationToId: \"\",\n        code: \"\"\n      },\n      rules: {\n        transferInventoryDate: [{\n          type: 'date',\n          required: true,\n          message: 'Please input TransferInventoryDate',\n          trigger: 'blur'\n        }],\n        locationFromId: [{\n          required: true,\n          type: 'string',\n          message: 'Please choose Location From',\n          trigger: 'change'\n        }],\n        locationToId: [{\n          required: true,\n          type: 'string',\n          message: 'Please choose Location To',\n          trigger: 'change'\n        }] // note: [{required: true, type: 'string', message: 'Please input Memo', trigger: 'blur'}],\n\n      },\n      // Options\n      itemOption: [],\n      dialog: true,\n      notifications: false,\n      sound: true,\n      widgets: false,\n      labelPosition: \"top\",\n      options: {\n        disabledDate: function (time) {\n          return false;\n        }\n      },\n      disabledDate: false,\n      type: \"\",\n      posTransferInventoryDetail: {},\n      locationOption: [],\n      disableItem: true,\n      disableLocationFrom: false,\n      skip: 0,\n      closeDate: \"\",\n      closingStockDate: \"\"\n    };\n  },\n  mounted: function () {\n    var _this = this;\n\n    this.$jQuery('body').off();\n    var vm = this;\n\n    if (vm.isDetectedDate === true) {\n      vm.options = {\n        disabledDate: function (time) {\n          var min = moment().startOf(\"day\").toDate().getTime();\n          return time.getTime() < min;\n        }\n      };\n    }\n\n    var elem = this.$jQuery('el-dialog.transferInventory');\n\n    var checkEvent = $._data($('body').get(0), 'events');\n\n    if (checkEvent.keyup.length <= 1) {\n      this.$nextTick(function () {\n        _this.$jQuery('body').on('keyup', elem, _this.barcodeScanTransferInventory);\n      });\n    }\n\n    this.$jQuery('body').on('focus', 'input[type=number]', function (e) {\n      $(this).on('wheel', function (e) {\n        e.preventDefault();\n      });\n    });\n  },\n  watch: {\n    currentSize: function (val) {\n      this.isSearching = true;\n      this.skip = (this.currentPage - 1) * val;\n      this.queryData(this.searchData, this.skip, val + this.skip);\n    },\n    currentPage: function (val) {\n      this.isSearching = true;\n      this.skip = (val - 1) * this.currentSize;\n      this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n    },\n    searchData: function (val) {\n      this.isSearching = true;\n      this.skip = (this.currentPage - 1) * this.currentSize;\n      this.queryData(val, this.skip, this.currentSize + this.skip);\n    },\n    \"posTransferInventoryForm.transferInventoryDate\": function (val) {\n      var vm = this;\n\n      if (vm.dialogUpdateTransferInventory == false) {\n        vm.posTransferInventoryForm.posTransferInventoryDate = val;\n      }\n\n      if (vm.closeDate && vm.closeDate != \"\" && vm.closeDate != undefined) {\n        vm.options = {\n          disabledDate: function (time) {\n            var min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n            return time.getTime() < min;\n          }\n        };\n      } else {\n        vm.options = {\n          disabledDate: function (time) {\n            return false;\n          }\n        };\n      }\n\n      if (vm.isDetectedDate === true) {\n        vm.options = {\n          disabledDate: function (time) {\n            var min = moment().startOf(\"day\").toDate().getTime();\n            return time.getTime() < min;\n          }\n        };\n      }\n    },\n    \"posTransferInventoryForm.itemId\": function (val) {\n      if (val) {\n        this.addToTransferInventoryData(val);\n      }\n    },\n    \"posTransferInventoryForm.locationFromId\": function (val) {\n      if (val) {\n        this.disableItem = false;\n      } else {\n        this.disableItem = true;\n      }\n    }\n  },\n  methods: {\n    handleCloseModal: function () {\n      this.resetForm();\n      this.refForm = \"\";\n    },\n    handleSizeChange: function (val) {\n      this.currentSize = val;\n    },\n    handleCurrentChange: function (val) {\n      this.currentPage = val;\n    },\n    _inputMaskTransferInventory: function () {\n      /*setTimeout(() => {\n          if ($(\".el-inputAmount\").length) {\n              new this.$_Cleave('.el-inputAmount', {\n                  numeral: true,\n                  numeralThousandsGroupStyle: 'thousand'\n              });\n          }\n           if ($(\".el-inputDR\").length) {\n              new this.$_Cleave('.el-inputDR', {\n                  numeral: true,\n                  numeralThousandsGroupStyle: 'thousand'\n              });\n          }\n           if ($(\".el-inputCR\").length) {\n              new this.$_Cleave('.el-inputCR', {\n                  numeral: true,\n                  numeralThousandsGroupStyle: 'thousand'\n              });\n          }\n        }, 200)*/\n    },\n    barcodeScanTransferInventory: function (e) {\n      if ((this.dialogAddTransferInventory === true || this.dialogUpdateTransferInventory === true) && this.posTransferInventoryForm.code === \"\") {\n        var scannerSensitivity = 100;\n\n        if (e.keyCode !== 13 && !isNaN(e.key)) {\n          this.takeBarcode += e.key;\n        }\n\n        this.timeStamp.push(Date.now());\n\n        if (this.timeStamp.length > 1) {\n          if (this.timeStamp[1] - this.timeStamp[0] >= scannerSensitivity) {\n            this.takeBarcode = '';\n            this.timeStamp = [];\n          } else {\n            if (e.keyCode === 13) {\n              this.posTransferInventoryForm.code = this.takeBarcode;\n              this.addToTransferInventoryData(null);\n              this.timeStamp = [];\n              this.takeBarcode = '';\n            }\n          }\n        }\n      }\n    },\n    queryData: _.debounce(function (val, skip, limit) {\n      var _this2 = this;\n\n      this.newLoading = true;\n      Meteor.call('queryTransferInventory', {\n        q: val,\n        filter: this.filter,\n        rolesArea: Session.get('area'),\n        options: {\n          skip: skip || 0,\n          limit: limit || 10\n        }\n      }, function (err, result) {\n        if (!err) {\n          _this2.posTransferInventoryDataDisplay = result.content;\n          _this2.count = result.countTransferInventory;\n        }\n\n        _this2.isSearching = false;\n        _this2.newLoading = false;\n      });\n    }, 300),\n    itemOpt: function (query) {\n      var _this3 = this;\n\n      if (!!query) {\n        setTimeout(function () {\n          Meteor.call('queryItemOption', query, function (err, result) {\n            if (!err) {\n              _this3.itemOption = result;\n            } else {\n              console.log(err.message);\n            }\n          });\n        }, 200);\n      } else {\n        Meteor.call('queryItemOption', \"\", function (err, result) {\n          if (!err) {\n            _this3.itemOption = result;\n          } else {\n            console.log(err.message);\n          }\n        });\n      }\n    },\n    locationOpt: function () {\n      var _this4 = this;\n\n      Meteor.call('queryLocationOption', function (err, result) {\n        _this4.locationOption = result;\n      });\n    },\n    saveTransferInventory: function (isCloseDialog, event) {\n      var _this5 = this;\n\n      event.preventDefault();\n      var vm = this;\n      var item = vm.posTransferInventoryData;\n      this.$refs[\"posTransferInventoryFormAdd\"].validate(function (valid) {\n        if (valid) {\n          var posTransferInventoryDoc = {\n            total: vm.$_numeral(vm.posTransferInventoryForm.total).value(),\n            transferInventoryDate: moment(vm.posTransferInventoryForm.transferInventoryDate).toDate(),\n            transferInventoryDateName: moment(vm.posTransferInventoryForm.transferInventoryDate).format(\"DD/MM/YYYY\"),\n            note: vm.posTransferInventoryForm.note,\n            rolesArea: Session.get('area'),\n            item: item,\n            locationFromId: vm.posTransferInventoryForm.locationFromId,\n            locationToId: vm.posTransferInventoryForm.locationToId\n          };\n          posTransferInventoryDoc.transaction = vm.posTransferInventoryData;\n          Meteor.call(\"insertTransferInventory\", posTransferInventoryDoc, function (err, result) {\n            if (!err) {\n              vm.$message({\n                duration: 1000,\n                message: \"Save Successfully!\",\n                type: 'success'\n              });\n              Session.set(\"transactionActionNumber\", (Session.get(\"transactionActionNumber\") || 0) + 1);\n\n              if (isCloseDialog) {\n                _this5.dialogAddTransferInventory = false;\n              }\n\n              vm.resetForm();\n            }\n          });\n        }\n      });\n    },\n    updateTransferInventory: function (id) {\n      event.preventDefault();\n      var vm = this;\n      vm.$refs[\"posTransferInventoryFormUpdate\"].validate(function (valid) {\n        if (valid) {\n          var posTransferInventoryDoc = {\n            total: vm.$_numeral(vm.posTransferInventoryForm.total).value(),\n            transferInventoryDate: moment(vm.posTransferInventoryForm.transferInventoryDate).toDate(),\n            transferInventoryDateName: moment(vm.posTransferInventoryForm.transferInventoryDate).format(\"DD/MM/YYYY\"),\n            note: vm.posTransferInventoryForm.note,\n            rolesArea: Session.get('area'),\n            item: vm.posTransferInventoryData,\n            locationFromId: vm.posTransferInventoryForm.locationFromId,\n            locationToId: vm.posTransferInventoryForm.locationToId\n          };\n          posTransferInventoryDoc.item = vm.posTransferInventoryData;\n          Meteor.call(\"updateTransferInventory\", posTransferInventoryDoc, id, function (err, result) {\n            if (!err) {\n              vm.$message({\n                duration: 1000,\n                message: \"Save Successfully!\",\n                type: 'success'\n              });\n              Session.set(\"transactionActionNumber\", (Session.get(\"transactionActionNumber\") || 0) + 1);\n              vm.dialogUpdateTransferInventory = false;\n              vm.resetForm();\n            } else {\n              vm.$message({\n                duration: 1000,\n                message: err.message,\n                type: 'success'\n              });\n            }\n          });\n        }\n      });\n    },\n    removeTransferInventory: function (index, row, rows) {\n      var vm = this;\n\n      if (vm.isDetectedDate === true && moment().startOf(\"day\").toDate().getTime() >= row.transferInventoryDate.getTime()) {\n        vm.$message({\n          duration: 1000,\n          message: this.langConfig['expiredDateForAction'],\n          type: 'error'\n        });\n        return false;\n      } //Check with closing stock\n\n\n      if (vm.closingStockDate && vm.closingStockDate !== \"\" && moment(vm.closingStockDate).endOf(\"day\").toDate().getTime() >= row.transferInventoryDate.getTime()) {\n        vm.$message({\n          duration: 1000,\n          message: this.langConfig['expiredDateForAction'],\n          type: 'error'\n        });\n        return false;\n      } //Check with closing stock\n\n\n      if (vm.closeDate && vm.closeDate !== \"\" && moment(vm.closeDate).endOf(\"day\").toDate().getTime() >= row.transferInventoryDate.getTime()) {\n        vm.$message({\n          duration: 1000,\n          message: this.langConfig['expiredDateForAction'],\n          type: 'error'\n        });\n        return false;\n      }\n\n      vm.$confirm('This will permanently delete the Item. Continue?', 'Warning', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        Meteor.call(\"removeTransferInventory\", row._id, row, function (err, result) {\n          if (!err) {\n            rows.splice(index, 1);\n            vm.$message({\n              message: \"\\u179B\\u17BB\\u1794 \" + row.transferInventoryDateName + \"\\u200B \\u1794\\u17B6\\u1793\\u1787\\u17C4\\u1782\\u1787\\u17D0\\u1799\",\n              type: 'success'\n            });\n            Session.set(\"transactionActionNumber\", (Session.get(\"transactionActionNumber\") || 0) + 1);\n          } else {\n            vm.$message({\n              type: 'error',\n              message: 'Delete Fialed'\n            });\n          }\n        });\n      }).catch(function () {\n        vm.$message({\n          type: 'info',\n          message: 'Delete canceled'\n        });\n      });\n    },\n    popupTransferInventoryAdd: function () {\n      this.refForm = \"posTransferInventoryFormAdd\";\n      this.resetForm();\n      this.itemOpt();\n      var vm = this;\n      $(\".el-dialog__title\").text(this.langConfig['add']);\n\n      if (vm.closingStockDate !== \"\") {\n        if (vm.closeDate && vm.closeDate !== \"\" && vm.closingStockDate.getTime() < vm.closeDate.getTime()) {\n          vm.options = {\n            disabledDate: function (time) {\n              var min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n              return time.getTime() < min;\n            }\n          };\n          vm.posTransferInventoryForm.transferInventoryDate = moment(vm.closeDate).add(1, \"days\").toDate();\n        } else {\n          vm.options = {\n            disabledDate: function (time) {\n              var min = moment(vm.closingStockDate).startOf(\"day\").add(1, \"days\").toDate().getTime();\n              return time.getTime() < min;\n            }\n          };\n          vm.posTransferInventoryForm.transferInventoryDate = moment(vm.closingStockDate).add(1, \"days\").toDate();\n        }\n      }\n    },\n    popupTransferInventoryUpdate: function (index, row, scope) {\n      var vm = this;\n\n      if (vm.isDetectedDate === true && moment().startOf(\"day\").toDate().getTime() >= row.transferInventoryDate.getTime()) {\n        vm.$message({\n          duration: 1000,\n          message: this.langConfig['expiredDateForAction'],\n          type: 'error'\n        });\n        return false;\n      } //Check with closing stock\n\n\n      if (vm.closingStockDate && vm.closingStockDate !== \"\" && moment(vm.closingStockDate).endOf(\"day\").toDate().getTime() >= row.transferInventoryDate.getTime()) {\n        vm.$message({\n          duration: 1000,\n          message: this.langConfig['expiredDateForAction'],\n          type: 'error'\n        });\n        return false;\n      } //Check with closing stock\n\n\n      if (vm.closeDate && vm.closeDate !== \"\" && moment(vm.closeDate).endOf(\"day\").toDate().getTime() >= row.transferInventoryDate.getTime()) {\n        vm.$message({\n          duration: 1000,\n          message: this.langConfig['expiredDateForAction'],\n          type: 'error'\n        });\n        return false;\n      }\n\n      this.refForm = \"posTransferInventoryFormUpdate\";\n      this.resetForm();\n      this.itemOpt();\n      $(\".el-dialog__title\").text(this.langConfig['update']);\n      vm.dialogUpdateTransferInventory = true;\n      vm.findTransferInventoryById(scope);\n    },\n    findTransferInventoryById: function (doc) {\n      var vm = this;\n      this.posTransferInventoryId = doc.row._id;\n      var companyDoc = WB_waterBillingSetup.findOne({});\n      Meteor.call(\"queryTransferInventoryById\", doc.row._id, function (err, data) {\n        vm.posTransferInventoryData = [];\n\n        if (data) {\n          vm.posTransferInventoryData = data.item;\n          vm.posTransferInventoryForm = {\n            total: formatCurrency(data.total, companyDoc.baseCurrency),\n            transferInventoryDate: moment(data.transferInventoryDate).toDate(),\n            transferInventoryDateName: moment(data.transferInventoryDate).format(\"DD/MM/YYYY\"),\n            note: data.note,\n            rolesArea: data.rolesArea,\n            item: data.item,\n            locationFromId: data.locationFromId,\n            locationToId: data.locationToId\n          };\n          vm.getTotal();\n        }\n      });\n    },\n    addToTransferInventoryData: function (val) {\n      var _this6 = this;\n\n      var vm = this;\n\n      if (val === null) {\n        val = vm.posTransferInventoryForm.code;\n      }\n\n      if (val === \"\" || val === undefined) {\n        this.$message({\n          duration: 1000,\n          message: \"Item Can't Empty!!\",\n          type: 'error'\n        });\n        var s = new buzz.sound('/the-calling.mp3');\n        s.play();\n        vm.posTransferInventoryForm.itemId = \"\";\n        vm.posTransferInventoryForm.code = \"\";\n        return false;\n      }\n\n      var isFound = vm.posTransferInventoryData.find(function (element) {\n        return element.itemId === val || element.code === val;\n      });\n\n      if (isFound !== undefined) {\n        this.$message({\n          type: 'error',\n          message: 'Item already add!'\n        });\n\n        var _s = new buzz.sound('/the-calling.mp3');\n\n        _s.play();\n\n        vm.posTransferInventoryForm.itemId = \"\";\n        vm.posTransferInventoryForm.code = \"\";\n        return false;\n      }\n\n      Meteor.call(\"queryPosProductById\", val, function (err, dataRaw) {\n        if (dataRaw) {\n          Meteor.call(\"queryPosAverageCostById\", dataRaw._id, Session.get(\"area\"), _this6.posTransferInventoryForm.locationFromId, function (err, data) {\n            if (data) {\n              vm.posTransferInventoryData.push({\n                itemId: dataRaw._id,\n                itemName: dataRaw.code + \" : \" + dataRaw.name,\n                cost: formatCurrency(data.averageCost),\n                rawQty: vm.$_numeral(data.qtyEnding).value(),\n                qty: 0,\n                code: dataRaw.code,\n                amount: 0,\n                desc: \"\"\n              });\n              vm.disableLocationFrom = vm.posTransferInventoryData.length > 0 ? true : false;\n              vm.posTransferInventoryForm.itemId = \"\";\n              vm.posTransferInventoryForm.code = \"\";\n              vm.$message({\n                duration: 1000,\n                message: \"\\u1794\\u1793\\u17D2\\u1790\\u17C2\\u1798 \" + dataRaw.code + \" : \" + dataRaw.name + \" បានជោគជ័យ !\",\n                type: 'success'\n              });\n\n              _this6.getTotal();\n            } else {\n              vm.$message({\n                duration: 3000,\n                message: \"ទំនិញនេះ អស់ពីស្តុកហើយ!!\",\n                type: 'error'\n              });\n\n              var _s2 = new buzz.sound('/the-calling.mp3');\n\n              _s2.play();\n\n              vm.posTransferInventoryForm.itemId = \"\";\n              vm.posTransferInventoryForm.code = \"\";\n            }\n          });\n        } else {\n          vm.$message({\n            duration: 1000,\n            message: \"មិនមានឈ្មេាះនេះឡើយ!!\",\n            type: 'error'\n          });\n\n          var _s3 = new buzz.sound('/the-calling.mp3');\n\n          _s3.play();\n\n          vm.posTransferInventoryForm.itemId = \"\";\n          vm.posTransferInventoryForm.code = \"\";\n        }\n      });\n    },\n    removeTransferInventoryDetailByIndex: function (index, row) {\n      var _this7 = this;\n\n      this.$confirm('This will permanently delete the Item. Continue?', 'Warning', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        _this7.posTransferInventoryData.splice(index, 1);\n\n        _this7.$message({\n          message: \"\\u179B\\u17BB\\u1794 \" + row.itemName + \" \\u1794\\u17B6\\u1793\\u1787\\u17C4\\u1782\\u1787\\u17D0\\u1799\",\n          type: 'success'\n        });\n\n        _this7.getTotal();\n\n        _this7.disableLocationFrom = _this7.posTransferInventoryData.length > 0 ? true : false;\n      }).catch(function () {\n        _this7.$message({\n          type: 'info',\n          message: 'Delete canceled'\n        });\n      });\n    },\n    updateTransferInventoryDetail: function (row, index) {\n      if (row.qty > row.rawQty) {\n        this.$message({\n          type: 'error',\n          message: 'ស្តុកមានមិនគ្រប់គ្រាន់'\n        });\n      }\n\n      row.amount = formatCurrency(this.$_numeral(row.cost).value() * row.qty);\n      this.posTransferInventoryData[index] = row;\n      var newIndex = index + 1;\n      this.getTotal();\n    },\n    cancel: function () {\n      this.resetForm();\n      this.$message({\n        type: 'info',\n        message: 'Canceled'\n      });\n    },\n    resetForm: function () {\n      this.posTransferInventoryData = [];\n      this.posTransferInventoryForm.locationFromId = \"\";\n      this.posTransferInventoryForm.locationToId = \"\";\n\n      if (this.$refs[\"posTransferInventoryFormAdd\"]) {\n        this.$refs[\"posTransferInventoryFormAdd\"].resetFields();\n        this.getTotal();\n      }\n\n      if (this.$refs[\"posTransferInventoryFormUpdate\"]) {\n        this.$refs[\"posTransferInventoryFormUpdate\"].resetFields();\n        this.getTotal();\n      }\n    },\n    getTotal: function () {\n      var vm = this;\n      var total = 0;\n      vm.posTransferInventoryData.forEach(function (obj) {\n        total += parseFloat(vm.$_numeral(obj.amount).value());\n      });\n      vm.disableLocationFrom = vm.posTransferInventoryData.length > 0 ? true : false;\n      var companyDoc = WB_waterBillingSetup.findOne({});\n      this.currencySymbol = getCurrencySymbolById(companyDoc.baseCurrency);\n      vm.posTransferInventoryForm.total = formatCurrency(total, companyDoc.baseCurrency);\n    },\n    popupTransferInventoryShow: function (row) {\n      var vm = this;\n      this.dialogShowTransferInventory = true;\n      $(\".el-dialog__title\").text(this.langConfig['show']);\n      Meteor.call(\"queryTransferInventoryByIdShow\", row._id, function (err, result) {\n        if (result) {\n          vm.posTransferInventoryShowData = result;\n        } else {\n          console.log(err.message);\n        }\n      });\n    }\n  },\n  created: function () {\n    var _this8 = this;\n\n    var vm = this;\n    this.isSearching = true;\n    this.queryData();\n    this.getTotal();\n    this.locationOpt();\n    Meteor.subscribe('Pos_TransferInventoryReact');\n    var companyDoc = WB_waterBillingSetup.findOne({});\n    this.isDetectedDate = companyDoc.isDetectedDate; //Get Last Closing Stock\n\n    Meteor.call(\"queryLastClosingStock\", Session.get('area'), function (err, result) {\n      if (result) {\n        _this8.closingStockDate = result.closeDate;\n      } else {\n        _this8.closingStockDate = \"\";\n      }\n    }); //Get Last CLosing entry from Account\n\n    if (companyDoc.integratedPosAccount) {\n      Meteor.call(\"queryLastClosingEntry\", Session.get(\"area\"), function (err, re) {\n        if (re !== undefined) {\n          vm.closeDate = re.closeDate;\n        } else {\n          vm.closeDate = \"\";\n        }\n      });\n    }\n  },\n  computed: {\n    langConfig: function () {\n      var _this9 = this;\n\n      var data = compoLang.filter(function (config) {\n        return config.lang === _this9.langSession;\n      })[0]['transferInventory'];\n      return data;\n    }\n  }\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/activity/imports/vue/ui/posTransferInventory.vue"],"names":["draggable","module","link","v","formatCurrency","GeneralFunction","getCurrencySymbolById","WB_waterBillingSetup","compoLang","Pos_TransferInventoryReact","exportDefault","meteor","langSession","Session","get","disabledRemove","disabledUpdate","newRe","vm","find","fetch","queryData","searchData","skip","currentSize","components","data","newLoading","keyCode","timeStamp","takeBarcode","fullscreen","refForm","posTransferInventoryData","posTransferInventoryShowData","posTransferInventoryDataDisplay","multipleSelection","posTransferInventoryId","loading","isSearching","currentPage","count","dialogAddTransferInventory","dialogUpdateTransferInventory","dialogShowTransferInventory","isDetectedDate","posTransferInventoryForm","itemId","itemName","cost","rawQty","qty","price","amount","total","transferInventoryDate","moment","toDate","note","desc","locationFromId","locationToId","code","rules","type","required","message","trigger","itemOption","dialog","notifications","sound","widgets","labelPosition","options","disabledDate","time","posTransferInventoryDetail","locationOption","disableItem","disableLocationFrom","closeDate","closingStockDate","mounted","$jQuery","off","min","startOf","getTime","elem","checkEvent","$","_data","keyup","length","$nextTick","on","barcodeScanTransferInventory","e","preventDefault","watch","val","posTransferInventoryDate","undefined","add","addToTransferInventoryData","methods","handleCloseModal","resetForm","handleSizeChange","handleCurrentChange","_inputMaskTransferInventory","scannerSensitivity","isNaN","key","push","Date","now","_","debounce","limit","Meteor","call","q","filter","rolesArea","err","result","content","countTransferInventory","itemOpt","query","setTimeout","console","log","locationOpt","saveTransferInventory","isCloseDialog","event","item","$refs","validate","valid","posTransferInventoryDoc","$_numeral","value","transferInventoryDateName","format","transaction","$message","duration","set","updateTransferInventory","id","removeTransferInventory","index","row","rows","langConfig","endOf","$confirm","confirmButtonText","cancelButtonText","then","_id","splice","catch","popupTransferInventoryAdd","text","popupTransferInventoryUpdate","scope","findTransferInventoryById","doc","companyDoc","findOne","baseCurrency","getTotal","s","buzz","play","isFound","element","dataRaw","name","averageCost","qtyEnding","removeTransferInventoryDetailByIndex","updateTransferInventoryDetail","newIndex","cancel","resetFields","forEach","obj","parseFloat","currencySymbol","popupTransferInventoryShow","created","subscribe","integratedPosAccount","re","computed","config","lang"],"mappings":"AAAA,IAAIA,SAAJ;AAAcC,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAAA,uBAASC,CAAT,EAAW;AAACH,IAAAA,SAAS,GAACG,CAAV;AAAY;AAAxB,CAA3B,EAAqD,CAArD;AAAwD,IAAIC,cAAJ;AAAmBH,MAAM,CAACC,IAAP,CAAY,4CAAZ,EAAyD;AAACE,EAAAA,cAAD,YAAgBD,CAAhB,EAAkB;AAACC,IAAAA,cAAc,GAACD,CAAf;AAAiB;AAApC,CAAzD,EAA+F,CAA/F;AAAkG,IAAIE,eAAJ;AAAoBJ,MAAM,CAACC,IAAP,CAAY,8CAAZ,EAA2D;AAACG,EAAAA,eAAD,YAAiBF,CAAjB,EAAmB;AAACE,IAAAA,eAAe,GAACF,CAAhB;AAAkB;AAAtC,CAA3D,EAAmG,CAAnG;AAAsG,IAAIG,qBAAJ;AAA0BL,MAAM,CAACC,IAAP,CAAY,4CAAZ,EAAyD;AAACI,EAAAA,qBAAD,YAAuBH,CAAvB,EAAyB;AAACG,IAAAA,qBAAqB,GAACH,CAAtB;AAAwB;AAAlD,CAAzD,EAA6G,CAA7G;AAAgH,IAAII,oBAAJ;AAAyBN,MAAM,CAACC,IAAP,CAAY,oCAAZ,EAAiD;AAACK,EAAAA,oBAAD,YAAsBJ,CAAtB,EAAwB;AAACI,IAAAA,oBAAoB,GAACJ,CAArB;AAAuB;AAAhD,CAAjD,EAAmG,CAAnG;AAAsG,IAAIK,SAAJ;AAAcP,MAAM,CAACC,IAAP,CAAY,oCAAZ,EAAiD;AAAA,uBAASC,CAAT,EAAW;AAACK,IAAAA,SAAS,GAACL,CAAV;AAAY;AAAxB,CAAjD,EAA2E,CAA3E;AAA8E,IAAIM,0BAAJ;AAA+BR,MAAM,CAACC,IAAP,CAAY,uCAAZ,EAAoD;AAACO,EAAAA,0BAAD,YAA4BN,CAA5B,EAA8B;AAACM,IAAAA,0BAA0B,GAACN,CAA3B;AAA6B;AAA5D,CAApD,EAAkH,CAAlH;AAAzrBF,MAAM,CAACS,aAAP,CA2lBe;AACXC,EAAAA,MAAM,EAAE;AACJC,IAAAA,WADI,cACU;AACV,aAAOC,OAAO,CAACC,GAAR,CAAY,MAAZ,KAAuB,IAA9B;AACH,KAHG;AAIJC,IAAAA,cAJI,cAIa;AACb,aAAOF,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAP;AACH,KANG;AAOJE,IAAAA,cAPI,cAOa;AACb,aAAOH,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAP;AACH,KATG;AAUJG,IAAAA,KAVI,cAUI;AACJ,UAAIC,EAAE,GAAG,IAAT;AACAT,MAAAA,0BAA0B,CAACU,IAA3B,CAAgC,EAAhC,EAAoCC,KAApC;AACAF,MAAAA,EAAE,CAACG,SAAH,CAAaH,EAAE,CAACI,UAAhB,EAA4BJ,EAAE,CAACK,IAA/B,EAAqCL,EAAE,CAACM,WAAH,GAAiBN,EAAE,CAACK,IAAzD;AACH;AAdG,GADG;AAiBXE,EAAAA,UAAU,EAAE;AACRzB,IAAAA,SAAS,EAATA;AADQ,GAjBD;AAoBX0B,EAAAA,IApBW,cAoBJ;AACH,WAAO;AACHC,MAAAA,UAAU,EAAE,IADT;AAEHC,MAAAA,OAAO,EAAE,EAFN;AAGHC,MAAAA,SAAS,EAAE,EAHR;AAIHC,MAAAA,WAAW,EAAE,EAJV;AAMHC,MAAAA,UAAU,EAAE,IANT;AAOHC,MAAAA,OAAO,EAAE,EAPN;AAQHC,MAAAA,wBAAwB,EAAE,EARvB;AASHC,MAAAA,4BAA4B,EAAE,EAT3B;AAUHC,MAAAA,+BAA+B,EAAE,EAV9B;AAWHC,MAAAA,iBAAiB,EAAE,EAXhB;AAYHC,MAAAA,sBAAsB,EAAE,EAZrB;AAaHC,MAAAA,OAAO,EAAE,KAbN;AAcHhB,MAAAA,UAAU,EAAE,EAdT;AAeHiB,MAAAA,WAAW,EAAE,KAfV;AAgBHC,MAAAA,WAAW,EAAE,CAhBV;AAiBHhB,MAAAA,WAAW,EAAE,EAjBV;AAkBHiB,MAAAA,KAAK,EAAE,CAlBJ;AAmBHC,MAAAA,0BAA0B,EAAE,KAnBzB;AAoBHC,MAAAA,6BAA6B,EAAE,KApB5B;AAqBHC,MAAAA,2BAA2B,EAAE,KArB1B;AAsBHC,MAAAA,cAAc,EAAE,KAtBb;AAuBHC,MAAAA,wBAAwB,EAAE;AACtBC,QAAAA,MAAM,EAAE,EADc;AAEtBC,QAAAA,QAAQ,EAAE,EAFY;AAGtBC,QAAAA,IAAI,EAAE,CAHgB;AAItBC,QAAAA,MAAM,EAAE,CAJc;AAKtBC,QAAAA,GAAG,EAAE,CALiB;AAMtBC,QAAAA,KAAK,EAAE,CANe;AAOtBC,QAAAA,MAAM,EAAE,CAPc;AAQtBC,QAAAA,KAAK,EAAE,CARe;AAStBC,QAAAA,qBAAqB,EAAEC,MAAM,GAAGC,MAAT,EATD;AAUtBC,QAAAA,IAAI,EAAE,EAVgB;AAWtBC,QAAAA,IAAI,EAAE,EAXgB;AAYtBC,QAAAA,cAAc,EAAE,EAZM;AAatBC,QAAAA,YAAY,EAAE,EAbQ;AActBC,QAAAA,IAAI,EAAE;AAdgB,OAvBvB;AAwCHC,MAAAA,KAAK,EAAE;AACHR,QAAAA,qBAAqB,EAAE,CAAC;AACpBS,UAAAA,IAAI,EAAE,MADc;AAEpBC,UAAAA,QAAQ,EAAE,IAFU;AAGpBC,UAAAA,OAAO,EAAE,oCAHW;AAIpBC,UAAAA,OAAO,EAAE;AAJW,SAAD,CADpB;AAOHP,QAAAA,cAAc,EAAE,CAAC;AACbK,UAAAA,QAAQ,EAAE,IADG;AAEbD,UAAAA,IAAI,EAAE,QAFO;AAGbE,UAAAA,OAAO,EAAE,6BAHI;AAIbC,UAAAA,OAAO,EAAE;AAJI,SAAD,CAPb;AAaHN,QAAAA,YAAY,EAAE,CAAC;AACXI,UAAAA,QAAQ,EAAE,IADC;AAEXD,UAAAA,IAAI,EAAE,QAFK;AAGXE,UAAAA,OAAO,EAAE,2BAHE;AAIXC,UAAAA,OAAO,EAAE;AAJE,SAAD,CAbX,CAmBH;;AAnBG,OAxCJ;AA8DH;AACAC,MAAAA,UAAU,EAAE,EA/DT;AAiEHC,MAAAA,MAAM,EAAE,IAjEL;AAkEHC,MAAAA,aAAa,EAAE,KAlEZ;AAmEHC,MAAAA,KAAK,EAAE,IAnEJ;AAoEHC,MAAAA,OAAO,EAAE,KApEN;AAqEHC,MAAAA,aAAa,EAAE,KArEZ;AAsEHC,MAAAA,OAAO,EAAE;AACLC,QAAAA,YADK,YACQC,IADR,EACc;AACf,iBAAO,KAAP;AACH;AAHI,OAtEN;AA2EHD,MAAAA,YAAY,EAAE,KA3EX;AA4EHX,MAAAA,IAAI,EAAE,EA5EH;AA6EHa,MAAAA,0BAA0B,EAAE,EA7EzB;AA8EHC,MAAAA,cAAc,EAAE,EA9Eb;AA+EHC,MAAAA,WAAW,EAAE,IA/EV;AAgFHC,MAAAA,mBAAmB,EAAE,KAhFlB;AAiFHzD,MAAAA,IAAI,EAAE,CAjFH;AAkFH0D,MAAAA,SAAS,EAAE,EAlFR;AAmFHC,MAAAA,gBAAgB,EAAE;AAnFf,KAAP;AAqFH,GA1GU;AA2GXC,EAAAA,OA3GW,cA2GD;AAAA;;AACN,SAAKC,OAAL,CAAa,MAAb,EAAqBC,GAArB;AAEA,QAAInE,EAAE,GAAG,IAAT;;AACA,QAAIA,EAAE,CAAC2B,cAAH,KAAsB,IAA1B,EAAgC;AAC5B3B,MAAAA,EAAE,CAACwD,OAAH,GAAa;AACTC,QAAAA,YADS,YACIC,IADJ,EACU;AACf,cAAIU,GAAG,GAAG9B,MAAM,GAAG+B,OAAT,CAAiB,KAAjB,EAAwB9B,MAAxB,GAAiC+B,OAAjC,EAAV;AACA,iBAAOZ,IAAI,CAACY,OAAL,KAAiBF,GAAxB;AACH;AAJQ,OAAb;AAMH;;AAED,QAAIG,IAAI,GAAG,KAAKL,OAAL,CAAa,6BAAb,CAAX;;AACA,QAAIM,UAAU,GAAGC,CAAC,CAACC,KAAF,CAAQD,CAAC,CAAC,MAAD,CAAD,CAAU7E,GAAV,CAAc,CAAd,CAAR,EAA0B,QAA1B,CAAjB;;AACA,QAAI4E,UAAU,CAACG,KAAX,CAAiBC,MAAjB,IAA2B,CAA/B,EAAkC;AAC9B,WAAKC,SAAL,CAAe,YAAM;AACjB,QAAA,KAAI,CAACX,OAAL,CAAa,MAAb,EAAqBY,EAArB,CAAwB,OAAxB,EAAiCP,IAAjC,EAAuC,KAAI,CAACQ,4BAA5C;AACH,OAFD;AAGH;;AACD,SAAKb,OAAL,CAAa,MAAb,EAAqBY,EAArB,CAAwB,OAAxB,EAAiC,oBAAjC,EAAuD,UAAUE,CAAV,EAAa;AAChEP,MAAAA,CAAC,CAAC,IAAD,CAAD,CAAQK,EAAR,CAAW,OAAX,EAAoB,UAAUE,CAAV,EAAa;AAC7BA,QAAAA,CAAC,CAACC,cAAF;AACH,OAFD;AAGH,KAJD;AAKH,GApIU;AAqIXC,EAAAA,KAAK,EAAE;AACH5E,IAAAA,WADG,YACS6E,GADT,EACc;AACb,WAAK9D,WAAL,GAAmB,IAAnB;AACA,WAAKhB,IAAL,GAAY,CAAC,KAAKiB,WAAL,GAAmB,CAApB,IAAyB6D,GAArC;AACA,WAAKhF,SAAL,CAAe,KAAKC,UAApB,EAAgC,KAAKC,IAArC,EAA2C8E,GAAG,GAAG,KAAK9E,IAAtD;AACH,KALE;AAMHiB,IAAAA,WANG,YAMS6D,GANT,EAMc;AACb,WAAK9D,WAAL,GAAmB,IAAnB;AACA,WAAKhB,IAAL,GAAY,CAAC8E,GAAG,GAAG,CAAP,IAAY,KAAK7E,WAA7B;AACA,WAAKH,SAAL,CAAe,KAAKC,UAApB,EAAgC,KAAKC,IAArC,EAA2C,KAAKC,WAAL,GAAmB,KAAKD,IAAnE;AACH,KAVE;AAWHD,IAAAA,UAXG,YAWQ+E,GAXR,EAWa;AACZ,WAAK9D,WAAL,GAAmB,IAAnB;AACA,WAAKhB,IAAL,GAAY,CAAC,KAAKiB,WAAL,GAAmB,CAApB,IAAyB,KAAKhB,WAA1C;AACA,WAAKH,SAAL,CAAegF,GAAf,EAAoB,KAAK9E,IAAzB,EAA+B,KAAKC,WAAL,GAAmB,KAAKD,IAAvD;AACH,KAfE;AAgBH,oDAhBG,YAgB8C8E,GAhB9C,EAgBmD;AAClD,UAAInF,EAAE,GAAG,IAAT;;AACA,UAAIA,EAAE,CAACyB,6BAAH,IAAoC,KAAxC,EAA+C;AAC3CzB,QAAAA,EAAE,CAAC4B,wBAAH,CAA4BwD,wBAA5B,GAAuDD,GAAvD;AACH;;AACD,UAAInF,EAAE,CAAC+D,SAAH,IAAgB/D,EAAE,CAAC+D,SAAH,IAAgB,EAAhC,IAAsC/D,EAAE,CAAC+D,SAAH,IAAgBsB,SAA1D,EAAqE;AACjErF,QAAAA,EAAE,CAACwD,OAAH,GAAa;AACTC,UAAAA,YADS,YACIC,IADJ,EACU;AACf,gBAAIU,GAAG,GAAG9B,MAAM,CAACtC,EAAE,CAAC+D,SAAJ,CAAN,CAAqBuB,GAArB,CAAyB,CAAzB,EAA4B,MAA5B,EAAoC/C,MAApC,GAA6C+B,OAA7C,EAAV;AACA,mBAAOZ,IAAI,CAACY,OAAL,KAAiBF,GAAxB;AACH;AAJQ,SAAb;AAMH,OAPD,MAOO;AACHpE,QAAAA,EAAE,CAACwD,OAAH,GAAa;AACTC,UAAAA,YADS,YACIC,IADJ,EACU;AACf,mBAAO,KAAP;AACH;AAHQ,SAAb;AAKH;;AAED,UAAI1D,EAAE,CAAC2B,cAAH,KAAsB,IAA1B,EAAgC;AAC5B3B,QAAAA,EAAE,CAACwD,OAAH,GAAa;AACTC,UAAAA,YADS,YACIC,IADJ,EACU;AACf,gBAAIU,GAAG,GAAG9B,MAAM,GAAG+B,OAAT,CAAiB,KAAjB,EAAwB9B,MAAxB,GAAiC+B,OAAjC,EAAV;AACA,mBAAOZ,IAAI,CAACY,OAAL,KAAiBF,GAAxB;AACH;AAJQ,SAAb;AAMH;AAEJ,KA7CE;AA8CH,qCA9CG,YA8C+Be,GA9C/B,EA8CoC;AACnC,UAAIA,GAAJ,EAAS;AACL,aAAKI,0BAAL,CAAgCJ,GAAhC;AACH;AACJ,KAlDE;AAmDH,6CAnDG,YAmDuCA,GAnDvC,EAmD4C;AAC3C,UAAIA,GAAJ,EAAS;AACL,aAAKtB,WAAL,GAAmB,KAAnB;AACH,OAFD,MAEO;AACH,aAAKA,WAAL,GAAmB,IAAnB;AACH;AACJ;AAzDE,GArII;AAgMX2B,EAAAA,OAAO,EAAE;AACLC,IAAAA,gBADK,cACc;AAEf,WAAKC,SAAL;AACA,WAAK5E,OAAL,GAAe,EAAf;AACH,KALI;AAML6E,IAAAA,gBANK,YAMYR,GANZ,EAMiB;AAClB,WAAK7E,WAAL,GAAmB6E,GAAnB;AACH,KARI;AASLS,IAAAA,mBATK,YASeT,GATf,EASoB;AACrB,WAAK7D,WAAL,GAAmB6D,GAAnB;AACH,KAXI;AAYLU,IAAAA,2BAZK,cAYyB;AAC1B;;;;;;;;;;;;;;;;;;;;AAwBH,KArCI;AAsCLd,IAAAA,4BAtCK,YAsCwBC,CAtCxB,EAsC2B;AAC5B,UAAI,CAAC,KAAKxD,0BAAL,KAAoC,IAApC,IAA4C,KAAKC,6BAAL,KAAuC,IAApF,KAA6F,KAAKG,wBAAL,CAA8BgB,IAA9B,KAAuC,EAAxI,EAA4I;AACxI,YAAIkD,kBAAkB,GAAG,GAAzB;;AACA,YAAId,CAAC,CAACtE,OAAF,KAAc,EAAd,IAAoB,CAACqF,KAAK,CAACf,CAAC,CAACgB,GAAH,CAA9B,EAAuC;AACnC,eAAKpF,WAAL,IAAoBoE,CAAC,CAACgB,GAAtB;AACH;;AACD,aAAKrF,SAAL,CAAesF,IAAf,CAAoBC,IAAI,CAACC,GAAL,EAApB;;AACA,YAAI,KAAKxF,SAAL,CAAeiE,MAAf,GAAwB,CAA5B,EAA+B;AAC3B,cAAI,KAAKjE,SAAL,CAAe,CAAf,IAAoB,KAAKA,SAAL,CAAe,CAAf,CAApB,IAAyCmF,kBAA7C,EAAiE;AAC7D,iBAAKlF,WAAL,GAAmB,EAAnB;AACA,iBAAKD,SAAL,GAAiB,EAAjB;AACH,WAHD,MAGO;AACH,gBAAIqE,CAAC,CAACtE,OAAF,KAAc,EAAlB,EAAsB;AAClB,mBAAKkB,wBAAL,CAA8BgB,IAA9B,GAAqC,KAAKhC,WAA1C;AACA,mBAAK2E,0BAAL,CAAgC,IAAhC;AACA,mBAAK5E,SAAL,GAAiB,EAAjB;AACA,mBAAKC,WAAL,GAAmB,EAAnB;AACH;AACJ;AACJ;AACJ;AACJ,KA3DI;AA4DLT,IAAAA,SAAS,EAAEiG,CAAC,CAACC,QAAF,CAAW,UAAUlB,GAAV,EAAe9E,IAAf,EAAqBiG,KAArB,EAA4B;AAAA;;AAC9C,WAAK7F,UAAL,GAAkB,IAAlB;AACA8F,MAAAA,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAsC;AAClCC,QAAAA,CAAC,EAAEtB,GAD+B;AAElCuB,QAAAA,MAAM,EAAE,KAAKA,MAFqB;AAGlCC,QAAAA,SAAS,EAAEhH,OAAO,CAACC,GAAR,CAAY,MAAZ,CAHuB;AAIlC4D,QAAAA,OAAO,EAAE;AAACnD,UAAAA,IAAI,EAAEA,IAAI,IAAI,CAAf;AAAkBiG,UAAAA,KAAK,EAAEA,KAAK,IAAI;AAAlC;AAJyB,OAAtC,EAKG,UAACM,GAAD,EAAMC,MAAN,EAAiB;AAChB,YAAI,CAACD,GAAL,EAAU;AACN,UAAA,MAAI,CAAC3F,+BAAL,GAAuC4F,MAAM,CAACC,OAA9C;AACA,UAAA,MAAI,CAACvF,KAAL,GAAasF,MAAM,CAACE,sBAApB;AACH;;AACD,QAAA,MAAI,CAAC1F,WAAL,GAAmB,KAAnB;AACA,QAAA,MAAI,CAACZ,UAAL,GAAkB,KAAlB;AACH,OAZD;AAaH,KAfU,EAeR,GAfQ,CA5DN;AA4ELuG,IAAAA,OA5EK,YA4EGC,KA5EH,EA4EU;AAAA;;AACX,UAAI,CAAC,CAACA,KAAN,EAAa;AACTC,QAAAA,UAAU,CAAC,YAAM;AACbX,UAAAA,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA+BS,KAA/B,EAAsC,UAACL,GAAD,EAAMC,MAAN,EAAiB;AACnD,gBAAI,CAACD,GAAL,EAAU;AACN,cAAA,MAAI,CAAC1D,UAAL,GAAkB2D,MAAlB;AACH,aAFD,MAEO;AACHM,cAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAAC5D,OAAhB;AACH;AACJ,WAND;AAOH,SARS,EAQP,GARO,CAAV;AASH,OAVD,MAUO;AACHuD,QAAAA,MAAM,CAACC,IAAP,CAAY,iBAAZ,EAA+B,EAA/B,EAAmC,UAACI,GAAD,EAAMC,MAAN,EAAiB;AAChD,cAAI,CAACD,GAAL,EAAU;AACN,YAAA,MAAI,CAAC1D,UAAL,GAAkB2D,MAAlB;AACH,WAFD,MAEO;AACHM,YAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAAC5D,OAAhB;AACH;AACJ,SAND;AAOH;AACJ,KAhGI;AAiGLqE,IAAAA,WAjGK,cAiGS;AAAA;;AACVd,MAAAA,MAAM,CAACC,IAAP,CAAY,qBAAZ,EAAmC,UAACI,GAAD,EAAMC,MAAN,EAAiB;AAChD,QAAA,MAAI,CAACjD,cAAL,GAAsBiD,MAAtB;AACH,OAFD;AAGH,KArGI;AAuGLS,IAAAA,qBAvGK,YAuGiBC,aAvGjB,EAuGgCC,KAvGhC,EAuGuC;AAAA;;AACxCA,MAAAA,KAAK,CAACvC,cAAN;AACA,UAAIjF,EAAE,GAAG,IAAT;AACA,UAAIyH,IAAI,GAAGzH,EAAE,CAACe,wBAAd;AAEA,WAAK2G,KAAL,CAAW,6BAAX,EAA0CC,QAA1C,CAAmD,UAACC,KAAD,EAAW;AAC1D,YAAIA,KAAJ,EAAW;AACP,cAAIC,uBAAuB,GAAG;AAC1BzF,YAAAA,KAAK,EAAEpC,EAAE,CAAC8H,SAAH,CAAa9H,EAAE,CAAC4B,wBAAH,CAA4BQ,KAAzC,EAAgD2F,KAAhD,EADmB;AAE1B1F,YAAAA,qBAAqB,EAAEC,MAAM,CAACtC,EAAE,CAAC4B,wBAAH,CAA4BS,qBAA7B,CAAN,CAA0DE,MAA1D,EAFG;AAG1ByF,YAAAA,yBAAyB,EAAE1F,MAAM,CAACtC,EAAE,CAAC4B,wBAAH,CAA4BS,qBAA7B,CAAN,CAA0D4F,MAA1D,CAAiE,YAAjE,CAHD;AAK1BzF,YAAAA,IAAI,EAAExC,EAAE,CAAC4B,wBAAH,CAA4BY,IALR;AAO1BmE,YAAAA,SAAS,EAAEhH,OAAO,CAACC,GAAR,CAAY,MAAZ,CAPe;AAQ1B6H,YAAAA,IAAI,EAAEA,IARoB;AAS1B/E,YAAAA,cAAc,EAAE1C,EAAE,CAAC4B,wBAAH,CAA4Bc,cATlB;AAU1BC,YAAAA,YAAY,EAAE3C,EAAE,CAAC4B,wBAAH,CAA4Be;AAVhB,WAA9B;AAaAkF,UAAAA,uBAAuB,CAACK,WAAxB,GAAsClI,EAAE,CAACe,wBAAzC;AACAwF,UAAAA,MAAM,CAACC,IAAP,CAAY,yBAAZ,EAAuCqB,uBAAvC,EAAgE,UAACjB,GAAD,EAAMC,MAAN,EAAiB;AAC7E,gBAAI,CAACD,GAAL,EAAU;AACN5G,cAAAA,EAAE,CAACmI,QAAH,CAAY;AACRC,gBAAAA,QAAQ,EAAE,IADF;AAERpF,gBAAAA,OAAO,sBAFC;AAGRF,gBAAAA,IAAI,EAAE;AAHE,eAAZ;AAKAnD,cAAAA,OAAO,CAAC0I,GAAR,CAAY,yBAAZ,EAAuC,CAAC1I,OAAO,CAACC,GAAR,CAAY,yBAAZ,KAA0C,CAA3C,IAAgD,CAAvF;;AAEA,kBAAI2H,aAAJ,EAAmB;AACf,gBAAA,MAAI,CAAC/F,0BAAL,GAAkC,KAAlC;AACH;;AACDxB,cAAAA,EAAE,CAAC0F,SAAH;AACH;AACJ,WAdD;AAeH;AACJ,OAhCD;AAiCH,KA7II;AA8IL4C,IAAAA,uBA9IK,YA8ImBC,EA9InB,EA8IuB;AACxBf,MAAAA,KAAK,CAACvC,cAAN;AACA,UAAIjF,EAAE,GAAG,IAAT;AACAA,MAAAA,EAAE,CAAC0H,KAAH,CAAS,gCAAT,EAA2CC,QAA3C,CAAoD,UAACC,KAAD,EAAW;AAC3D,YAAIA,KAAJ,EAAW;AACP,cAAIC,uBAAuB,GAAG;AAC1BzF,YAAAA,KAAK,EAAEpC,EAAE,CAAC8H,SAAH,CAAa9H,EAAE,CAAC4B,wBAAH,CAA4BQ,KAAzC,EAAgD2F,KAAhD,EADmB;AAE1B1F,YAAAA,qBAAqB,EAAEC,MAAM,CAACtC,EAAE,CAAC4B,wBAAH,CAA4BS,qBAA7B,CAAN,CAA0DE,MAA1D,EAFG;AAG1ByF,YAAAA,yBAAyB,EAAE1F,MAAM,CAACtC,EAAE,CAAC4B,wBAAH,CAA4BS,qBAA7B,CAAN,CAA0D4F,MAA1D,CAAiE,YAAjE,CAHD;AAK1BzF,YAAAA,IAAI,EAAExC,EAAE,CAAC4B,wBAAH,CAA4BY,IALR;AAO1BmE,YAAAA,SAAS,EAAEhH,OAAO,CAACC,GAAR,CAAY,MAAZ,CAPe;AAQ1B6H,YAAAA,IAAI,EAAEzH,EAAE,CAACe,wBARiB;AAS1B2B,YAAAA,cAAc,EAAE1C,EAAE,CAAC4B,wBAAH,CAA4Bc,cATlB;AAU1BC,YAAAA,YAAY,EAAE3C,EAAE,CAAC4B,wBAAH,CAA4Be;AAVhB,WAA9B;AAaAkF,UAAAA,uBAAuB,CAACJ,IAAxB,GAA+BzH,EAAE,CAACe,wBAAlC;AACAwF,UAAAA,MAAM,CAACC,IAAP,CAAY,yBAAZ,EAAuCqB,uBAAvC,EAAgEU,EAAhE,EAAoE,UAAC3B,GAAD,EAAMC,MAAN,EAAiB;AACjF,gBAAI,CAACD,GAAL,EAAU;AACN5G,cAAAA,EAAE,CAACmI,QAAH,CAAY;AACRC,gBAAAA,QAAQ,EAAE,IADF;AAERpF,gBAAAA,OAAO,sBAFC;AAGRF,gBAAAA,IAAI,EAAE;AAHE,eAAZ;AAKAnD,cAAAA,OAAO,CAAC0I,GAAR,CAAY,yBAAZ,EAAuC,CAAC1I,OAAO,CAACC,GAAR,CAAY,yBAAZ,KAA0C,CAA3C,IAAgD,CAAvF;AAEAI,cAAAA,EAAE,CAACyB,6BAAH,GAAmC,KAAnC;AAEAzB,cAAAA,EAAE,CAAC0F,SAAH;AACH,aAXD,MAWO;AACH1F,cAAAA,EAAE,CAACmI,QAAH,CAAY;AACRC,gBAAAA,QAAQ,EAAE,IADF;AAERpF,gBAAAA,OAAO,EAAE4D,GAAG,CAAC5D,OAFL;AAGRF,gBAAAA,IAAI,EAAE;AAHE,eAAZ;AAKH;AACJ,WAnBD;AAoBH;AACJ,OArCD;AAuCH,KAxLI;AAyLL0F,IAAAA,uBAzLK,YAyLmBC,KAzLnB,EAyL0BC,GAzL1B,EAyL+BC,IAzL/B,EAyLqC;AACtC,UAAI3I,EAAE,GAAG,IAAT;;AAEA,UAAIA,EAAE,CAAC2B,cAAH,KAAsB,IAAtB,IAA8BW,MAAM,GAAG+B,OAAT,CAAiB,KAAjB,EAAwB9B,MAAxB,GAAiC+B,OAAjC,MAA8CoE,GAAG,CAACrG,qBAAJ,CAA0BiC,OAA1B,EAAhF,EAAqH;AACjHtE,QAAAA,EAAE,CAACmI,QAAH,CAAY;AACRC,UAAAA,QAAQ,EAAE,IADF;AAERpF,UAAAA,OAAO,EAAE,KAAK4F,UAAL,CAAgB,sBAAhB,CAFD;AAGR9F,UAAAA,IAAI,EAAE;AAHE,SAAZ;AAKA,eAAO,KAAP;AACH,OAVqC,CAatC;;;AACA,UAAI9C,EAAE,CAACgE,gBAAH,IAAuBhE,EAAE,CAACgE,gBAAH,KAAwB,EAA/C,IAAqD1B,MAAM,CAACtC,EAAE,CAACgE,gBAAJ,CAAN,CAA4B6E,KAA5B,CAAkC,KAAlC,EAAyCtG,MAAzC,GAAkD+B,OAAlD,MAA+DoE,GAAG,CAACrG,qBAAJ,CAA0BiC,OAA1B,EAAxH,EAA6J;AACzJtE,QAAAA,EAAE,CAACmI,QAAH,CAAY;AACRC,UAAAA,QAAQ,EAAE,IADF;AAERpF,UAAAA,OAAO,EAAE,KAAK4F,UAAL,CAAgB,sBAAhB,CAFD;AAGR9F,UAAAA,IAAI,EAAE;AAHE,SAAZ;AAKA,eAAO,KAAP;AACH,OArBqC,CAuBtC;;;AACA,UAAI9C,EAAE,CAAC+D,SAAH,IAAgB/D,EAAE,CAAC+D,SAAH,KAAiB,EAAjC,IAAuCzB,MAAM,CAACtC,EAAE,CAAC+D,SAAJ,CAAN,CAAqB8E,KAArB,CAA2B,KAA3B,EAAkCtG,MAAlC,GAA2C+B,OAA3C,MAAwDoE,GAAG,CAACrG,qBAAJ,CAA0BiC,OAA1B,EAAnG,EAAwI;AACpItE,QAAAA,EAAE,CAACmI,QAAH,CAAY;AACRC,UAAAA,QAAQ,EAAE,IADF;AAERpF,UAAAA,OAAO,EAAE,KAAK4F,UAAL,CAAgB,sBAAhB,CAFD;AAGR9F,UAAAA,IAAI,EAAE;AAHE,SAAZ;AAKA,eAAO,KAAP;AACH;;AAED9C,MAAAA,EAAE,CAAC8I,QAAH,CAAY,kDAAZ,EAAgE,SAAhE,EAA2E;AACvEC,QAAAA,iBAAiB,EAAE,IADoD;AAEvEC,QAAAA,gBAAgB,EAAE,QAFqD;AAGvElG,QAAAA,IAAI,EAAE;AAHiE,OAA3E,EAIGmG,IAJH,CAIQ,YAAM;AACV1C,QAAAA,MAAM,CAACC,IAAP,CAAY,yBAAZ,EAAuCkC,GAAG,CAACQ,GAA3C,EAAgDR,GAAhD,EAAqD,UAAC9B,GAAD,EAAMC,MAAN,EAAiB;AAClE,cAAI,CAACD,GAAL,EAAU;AACN+B,YAAAA,IAAI,CAACQ,MAAL,CAAYV,KAAZ,EAAmB,CAAnB;AACAzI,YAAAA,EAAE,CAACmI,QAAH,CAAY;AACRnF,cAAAA,OAAO,0BAAS0F,GAAG,CAACV,yBAAb,kEADC;AAERlF,cAAAA,IAAI,EAAE;AAFE,aAAZ;AAIAnD,YAAAA,OAAO,CAAC0I,GAAR,CAAY,yBAAZ,EAAuC,CAAC1I,OAAO,CAACC,GAAR,CAAY,yBAAZ,KAA0C,CAA3C,IAAgD,CAAvF;AAEH,WARD,MAQO;AACHI,YAAAA,EAAE,CAACmI,QAAH,CAAY;AACRrF,cAAAA,IAAI,EAAE,OADE;AAERE,cAAAA,OAAO,EAAE;AAFD,aAAZ;AAIH;AAEJ,SAhBD;AAmBH,OAxBD,EAwBGoG,KAxBH,CAwBS,YAAM;AACXpJ,QAAAA,EAAE,CAACmI,QAAH,CAAY;AACRrF,UAAAA,IAAI,EAAE,MADE;AAERE,UAAAA,OAAO,EAAE;AAFD,SAAZ;AAIH,OA7BD;AA+BH,KAzPI;AA0PLqG,IAAAA,yBA1PK,cA0PuB;AACxB,WAAKvI,OAAL,GAAe,6BAAf;AACA,WAAK4E,SAAL;AACA,WAAKsB,OAAL;AACA,UAAIhH,EAAE,GAAG,IAAT;AACAyE,MAAAA,CAAC,CAAC,mBAAD,CAAD,CAAuB6E,IAAvB,CAA4B,KAAKV,UAAL,CAAgB,KAAhB,CAA5B;;AAEA,UAAI5I,EAAE,CAACgE,gBAAH,KAAwB,EAA5B,EAAgC;AAC5B,YAAIhE,EAAE,CAAC+D,SAAH,IAAgB/D,EAAE,CAAC+D,SAAH,KAAiB,EAAjC,IAAuC/D,EAAE,CAACgE,gBAAH,CAAoBM,OAApB,KAAgCtE,EAAE,CAAC+D,SAAH,CAAaO,OAAb,EAA3E,EAAmG;AAC/FtE,UAAAA,EAAE,CAACwD,OAAH,GAAa;AACTC,YAAAA,YADS,YACIC,IADJ,EACU;AACf,kBAAIU,GAAG,GAAG9B,MAAM,CAACtC,EAAE,CAAC+D,SAAJ,CAAN,CAAqBuB,GAArB,CAAyB,CAAzB,EAA4B,MAA5B,EAAoC/C,MAApC,GAA6C+B,OAA7C,EAAV;AACA,qBAAOZ,IAAI,CAACY,OAAL,KAAiBF,GAAxB;AACH;AAJQ,WAAb;AAMApE,UAAAA,EAAE,CAAC4B,wBAAH,CAA4BS,qBAA5B,GAAoDC,MAAM,CAACtC,EAAE,CAAC+D,SAAJ,CAAN,CAAqBuB,GAArB,CAAyB,CAAzB,EAA4B,MAA5B,EAAoC/C,MAApC,EAApD;AACH,SARD,MAQO;AACHvC,UAAAA,EAAE,CAACwD,OAAH,GAAa;AACTC,YAAAA,YADS,YACIC,IADJ,EACU;AACf,kBAAIU,GAAG,GAAG9B,MAAM,CAACtC,EAAE,CAACgE,gBAAJ,CAAN,CAA4BK,OAA5B,CAAoC,KAApC,EAA2CiB,GAA3C,CAA+C,CAA/C,EAAkD,MAAlD,EAA0D/C,MAA1D,GAAmE+B,OAAnE,EAAV;AACA,qBAAOZ,IAAI,CAACY,OAAL,KAAiBF,GAAxB;AACH;AAJQ,WAAb;AAMApE,UAAAA,EAAE,CAAC4B,wBAAH,CAA4BS,qBAA5B,GAAoDC,MAAM,CAACtC,EAAE,CAACgE,gBAAJ,CAAN,CAA4BsB,GAA5B,CAAgC,CAAhC,EAAmC,MAAnC,EAA2C/C,MAA3C,EAApD;AACH;AACJ;AACJ,KApRI;AAqRLgH,IAAAA,4BArRK,YAqRwBd,KArRxB,EAqR+BC,GArR/B,EAqRoCc,KArRpC,EAqR2C;AAC5C,UAAIxJ,EAAE,GAAG,IAAT;;AACA,UAAIA,EAAE,CAAC2B,cAAH,KAAsB,IAAtB,IAA8BW,MAAM,GAAG+B,OAAT,CAAiB,KAAjB,EAAwB9B,MAAxB,GAAiC+B,OAAjC,MAA8CoE,GAAG,CAACrG,qBAAJ,CAA0BiC,OAA1B,EAAhF,EAAqH;AACjHtE,QAAAA,EAAE,CAACmI,QAAH,CAAY;AACRC,UAAAA,QAAQ,EAAE,IADF;AAERpF,UAAAA,OAAO,EAAE,KAAK4F,UAAL,CAAgB,sBAAhB,CAFD;AAGR9F,UAAAA,IAAI,EAAE;AAHE,SAAZ;AAKA,eAAO,KAAP;AACH,OAT2C,CAW5C;;;AACA,UAAI9C,EAAE,CAACgE,gBAAH,IAAuBhE,EAAE,CAACgE,gBAAH,KAAwB,EAA/C,IAAqD1B,MAAM,CAACtC,EAAE,CAACgE,gBAAJ,CAAN,CAA4B6E,KAA5B,CAAkC,KAAlC,EAAyCtG,MAAzC,GAAkD+B,OAAlD,MAA+DoE,GAAG,CAACrG,qBAAJ,CAA0BiC,OAA1B,EAAxH,EAA6J;AACzJtE,QAAAA,EAAE,CAACmI,QAAH,CAAY;AACRC,UAAAA,QAAQ,EAAE,IADF;AAERpF,UAAAA,OAAO,EAAE,KAAK4F,UAAL,CAAgB,sBAAhB,CAFD;AAGR9F,UAAAA,IAAI,EAAE;AAHE,SAAZ;AAKA,eAAO,KAAP;AACH,OAnB2C,CAqB5C;;;AACA,UAAI9C,EAAE,CAAC+D,SAAH,IAAgB/D,EAAE,CAAC+D,SAAH,KAAiB,EAAjC,IAAuCzB,MAAM,CAACtC,EAAE,CAAC+D,SAAJ,CAAN,CAAqB8E,KAArB,CAA2B,KAA3B,EAAkCtG,MAAlC,GAA2C+B,OAA3C,MAAwDoE,GAAG,CAACrG,qBAAJ,CAA0BiC,OAA1B,EAAnG,EAAwI;AACpItE,QAAAA,EAAE,CAACmI,QAAH,CAAY;AACRC,UAAAA,QAAQ,EAAE,IADF;AAERpF,UAAAA,OAAO,EAAE,KAAK4F,UAAL,CAAgB,sBAAhB,CAFD;AAGR9F,UAAAA,IAAI,EAAE;AAHE,SAAZ;AAKA,eAAO,KAAP;AACH;;AAED,WAAKhC,OAAL,GAAe,gCAAf;AAEA,WAAK4E,SAAL;AACA,WAAKsB,OAAL;AACAvC,MAAAA,CAAC,CAAC,mBAAD,CAAD,CAAuB6E,IAAvB,CAA4B,KAAKV,UAAL,CAAgB,QAAhB,CAA5B;AACA5I,MAAAA,EAAE,CAACyB,6BAAH,GAAmC,IAAnC;AACAzB,MAAAA,EAAE,CAACyJ,yBAAH,CAA6BD,KAA7B;AAGH,KA7TI;AA8TLC,IAAAA,yBA9TK,YA8TqBC,GA9TrB,EA8T0B;AAC3B,UAAI1J,EAAE,GAAG,IAAT;AACA,WAAKmB,sBAAL,GAA8BuI,GAAG,CAAChB,GAAJ,CAAQQ,GAAtC;AACA,UAAIS,UAAU,GAAGtK,oBAAoB,CAACuK,OAArB,CAA6B,EAA7B,CAAjB;AACArD,MAAAA,MAAM,CAACC,IAAP,CAAY,4BAAZ,EAA0CkD,GAAG,CAAChB,GAAJ,CAAQQ,GAAlD,EAAuD,UAACtC,GAAD,EAAMpG,IAAN,EAAe;AAClER,QAAAA,EAAE,CAACe,wBAAH,GAA8B,EAA9B;;AACA,YAAIP,IAAJ,EAAU;AACNR,UAAAA,EAAE,CAACe,wBAAH,GAA8BP,IAAI,CAACiH,IAAnC;AACAzH,UAAAA,EAAE,CAAC4B,wBAAH,GAA8B;AAC1BQ,YAAAA,KAAK,EAAElD,cAAc,CAACsB,IAAI,CAAC4B,KAAN,EAAauH,UAAU,CAACE,YAAxB,CADK;AAE1BxH,YAAAA,qBAAqB,EAAEC,MAAM,CAAC9B,IAAI,CAAC6B,qBAAN,CAAN,CAAmCE,MAAnC,EAFG;AAG1ByF,YAAAA,yBAAyB,EAAE1F,MAAM,CAAC9B,IAAI,CAAC6B,qBAAN,CAAN,CAAmC4F,MAAnC,CAA0C,YAA1C,CAHD;AAK1BzF,YAAAA,IAAI,EAAEhC,IAAI,CAACgC,IALe;AAO1BmE,YAAAA,SAAS,EAAEnG,IAAI,CAACmG,SAPU;AAQ1Bc,YAAAA,IAAI,EAAEjH,IAAI,CAACiH,IARe;AAS1B/E,YAAAA,cAAc,EAAElC,IAAI,CAACkC,cATK;AAU1BC,YAAAA,YAAY,EAAEnC,IAAI,CAACmC;AAVO,WAA9B;AAYA3C,UAAAA,EAAE,CAAC8J,QAAH;AACH;AACJ,OAlBD;AAoBH,KAtVI;AAuVLvE,IAAAA,0BAvVK,YAuVsBJ,GAvVtB,EAuV2B;AAAA;;AAC5B,UAAInF,EAAE,GAAG,IAAT;;AACA,UAAImF,GAAG,KAAK,IAAZ,EAAkB;AACdA,QAAAA,GAAG,GAAGnF,EAAE,CAAC4B,wBAAH,CAA4BgB,IAAlC;AACH;;AACD,UAAIuC,GAAG,KAAK,EAAR,IAAcA,GAAG,KAAKE,SAA1B,EAAqC;AACjC,aAAK8C,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE,IADA;AAEVpF,UAAAA,OAAO,EAAE,oBAFC;AAGVF,UAAAA,IAAI,EAAE;AAHI,SAAd;AAKA,YAAIiH,CAAC,GAAG,IAAIC,IAAI,CAAC3G,KAAT,CAAe,kBAAf,CAAR;AACA0G,QAAAA,CAAC,CAACE,IAAF;AACAjK,QAAAA,EAAE,CAAC4B,wBAAH,CAA4BC,MAA5B,GAAqC,EAArC;AACA7B,QAAAA,EAAE,CAAC4B,wBAAH,CAA4BgB,IAA5B,GAAmC,EAAnC;AACA,eAAO,KAAP;AACH;;AAED,UAAIsH,OAAO,GAAGlK,EAAE,CAACe,wBAAH,CAA4Bd,IAA5B,CAAiC,UAAUkK,OAAV,EAAmB;AAC9D,eAAOA,OAAO,CAACtI,MAAR,KAAmBsD,GAAnB,IAA0BgF,OAAO,CAACvH,IAAR,KAAiBuC,GAAlD;AACH,OAFa,CAAd;;AAGA,UAAI+E,OAAO,KAAK7E,SAAhB,EAA2B;AACvB,aAAK8C,QAAL,CAAc;AACVrF,UAAAA,IAAI,EAAE,OADI;AAEVE,UAAAA,OAAO,EAAE;AAFC,SAAd;;AAIA,YAAI+G,EAAC,GAAG,IAAIC,IAAI,CAAC3G,KAAT,CAAe,kBAAf,CAAR;;AACA0G,QAAAA,EAAC,CAACE,IAAF;;AACAjK,QAAAA,EAAE,CAAC4B,wBAAH,CAA4BC,MAA5B,GAAqC,EAArC;AACA7B,QAAAA,EAAE,CAAC4B,wBAAH,CAA4BgB,IAA5B,GAAmC,EAAnC;AACA,eAAO,KAAP;AACH;;AACD2D,MAAAA,MAAM,CAACC,IAAP,CAAY,qBAAZ,EAAmCrB,GAAnC,EAAwC,UAACyB,GAAD,EAAMwD,OAAN,EAAkB;AACtD,YAAIA,OAAJ,EAAa;AACT7D,UAAAA,MAAM,CAACC,IAAP,CAAY,yBAAZ,EAAuC4D,OAAO,CAAClB,GAA/C,EAAoDvJ,OAAO,CAACC,GAAR,CAAY,MAAZ,CAApD,EAAyE,MAAI,CAACgC,wBAAL,CAA8Bc,cAAvG,EAAuH,UAACkE,GAAD,EAAMpG,IAAN,EAAe;AAClI,gBAAIA,IAAJ,EAAU;AACNR,cAAAA,EAAE,CAACe,wBAAH,CAA4BkF,IAA5B,CAAiC;AAC7BpE,gBAAAA,MAAM,EAAEuI,OAAO,CAAClB,GADa;AAE7BpH,gBAAAA,QAAQ,EAAEsI,OAAO,CAACxH,IAAR,GAAe,KAAf,GAAuBwH,OAAO,CAACC,IAFZ;AAG7BtI,gBAAAA,IAAI,EAAE7C,cAAc,CAACsB,IAAI,CAAC8J,WAAN,CAHS;AAI7BtI,gBAAAA,MAAM,EAAEhC,EAAE,CAAC8H,SAAH,CAAatH,IAAI,CAAC+J,SAAlB,EAA6BxC,KAA7B,EAJqB;AAK7B9F,gBAAAA,GAAG,EAAE,CALwB;AAM7BW,gBAAAA,IAAI,EAAEwH,OAAO,CAACxH,IANe;AAO7BT,gBAAAA,MAAM,EAAE,CAPqB;AAQ7BM,gBAAAA,IAAI,EAAE;AARuB,eAAjC;AAUAzC,cAAAA,EAAE,CAAC8D,mBAAH,GAAyB9D,EAAE,CAACe,wBAAH,CAA4B6D,MAA5B,GAAqC,CAArC,GAAyC,IAAzC,GAAgD,KAAzE;AACA5E,cAAAA,EAAE,CAAC4B,wBAAH,CAA4BC,MAA5B,GAAqC,EAArC;AACA7B,cAAAA,EAAE,CAAC4B,wBAAH,CAA4BgB,IAA5B,GAAmC,EAAnC;AACA5C,cAAAA,EAAE,CAACmI,QAAH,CAAY;AACRC,gBAAAA,QAAQ,EAAE,IADF;AAERpF,gBAAAA,OAAO,EAAE,0CAAYoH,OAAO,CAACxH,IAApB,GAA2B,KAA3B,GAAmCwH,OAAO,CAACC,IAA3C,GAAkD,cAFnD;AAGRvH,gBAAAA,IAAI,EAAE;AAHE,eAAZ;;AAMA,cAAA,MAAI,CAACgH,QAAL;AACH,aArBD,MAqBO;AACH9J,cAAAA,EAAE,CAACmI,QAAH,CAAY;AACRC,gBAAAA,QAAQ,EAAE,IADF;AAERpF,gBAAAA,OAAO,EAAE,0BAFD;AAGRF,gBAAAA,IAAI,EAAE;AAHE,eAAZ;;AAKA,kBAAIiH,GAAC,GAAG,IAAIC,IAAI,CAAC3G,KAAT,CAAe,kBAAf,CAAR;;AACA0G,cAAAA,GAAC,CAACE,IAAF;;AACAjK,cAAAA,EAAE,CAAC4B,wBAAH,CAA4BC,MAA5B,GAAqC,EAArC;AACA7B,cAAAA,EAAE,CAAC4B,wBAAH,CAA4BgB,IAA5B,GAAmC,EAAnC;AACH;AAEJ,WAlCD;AAmCH,SApCD,MAoCO;AACH5C,UAAAA,EAAE,CAACmI,QAAH,CAAY;AACRC,YAAAA,QAAQ,EAAE,IADF;AAERpF,YAAAA,OAAO,EAAE,sBAFD;AAGRF,YAAAA,IAAI,EAAE;AAHE,WAAZ;;AAKA,cAAIiH,GAAC,GAAG,IAAIC,IAAI,CAAC3G,KAAT,CAAe,kBAAf,CAAR;;AACA0G,UAAAA,GAAC,CAACE,IAAF;;AACAjK,UAAAA,EAAE,CAAC4B,wBAAH,CAA4BC,MAA5B,GAAqC,EAArC;AACA7B,UAAAA,EAAE,CAAC4B,wBAAH,CAA4BgB,IAA5B,GAAmC,EAAnC;AACH;AACJ,OAhDD;AAiDH,KAxaI;AAyaL4H,IAAAA,oCAzaK,YAyagC/B,KAzahC,EAyauCC,GAzavC,EAya4C;AAAA;;AAC7C,WAAKI,QAAL,CAAc,kDAAd,EAAkE,SAAlE,EAA6E;AACzEC,QAAAA,iBAAiB,EAAE,IADsD;AAEzEC,QAAAA,gBAAgB,EAAE,QAFuD;AAGzElG,QAAAA,IAAI,EAAE;AAHmE,OAA7E,EAIGmG,IAJH,CAIQ,YAAM;AAEV,QAAA,MAAI,CAAClI,wBAAL,CAA8BoI,MAA9B,CAAqCV,KAArC,EAA4C,CAA5C;;AACA,QAAA,MAAI,CAACN,QAAL,CAAc;AACVnF,UAAAA,OAAO,0BAAS0F,GAAG,CAAC5G,QAAb,4DADG;AAEVgB,UAAAA,IAAI,EAAE;AAFI,SAAd;;AAIA,QAAA,MAAI,CAACgH,QAAL;;AACA,QAAA,MAAI,CAAChG,mBAAL,GAA2B,MAAI,CAAC/C,wBAAL,CAA8B6D,MAA9B,GAAuC,CAAvC,GAA2C,IAA3C,GAAkD,KAA7E;AAEH,OAdD,EAcGwE,KAdH,CAcS,YAAM;AACX,QAAA,MAAI,CAACjB,QAAL,CAAc;AACVrF,UAAAA,IAAI,EAAE,MADI;AAEVE,UAAAA,OAAO,EAAE;AAFC,SAAd;AAIH,OAnBD;AAoBH,KA9bI;AA+bLyH,IAAAA,6BA/bK,YA+byB/B,GA/bzB,EA+b8BD,KA/b9B,EA+bqC;AACtC,UAAIC,GAAG,CAACzG,GAAJ,GAAUyG,GAAG,CAAC1G,MAAlB,EAA0B;AACtB,aAAKmG,QAAL,CAAc;AACVrF,UAAAA,IAAI,EAAE,OADI;AAEVE,UAAAA,OAAO,EAAE;AAFC,SAAd;AAIH;;AACD0F,MAAAA,GAAG,CAACvG,MAAJ,GAAajD,cAAc,CAAC,KAAK4I,SAAL,CAAeY,GAAG,CAAC3G,IAAnB,EAAyBgG,KAAzB,KAAmCW,GAAG,CAACzG,GAAxC,CAA3B;AACA,WAAKlB,wBAAL,CAA8B0H,KAA9B,IAAuCC,GAAvC;AACA,UAAIgC,QAAQ,GAAGjC,KAAK,GAAG,CAAvB;AACA,WAAKqB,QAAL;AACH,KA1cI;AA2cLa,IAAAA,MA3cK,cA2cI;AACL,WAAKjF,SAAL;AACA,WAAKyC,QAAL,CAAc;AACVrF,QAAAA,IAAI,EAAE,MADI;AAEVE,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH,KAjdI;AAkdL0C,IAAAA,SAldK,cAkdO;AACR,WAAK3E,wBAAL,GAAgC,EAAhC;AACA,WAAKa,wBAAL,CAA8Bc,cAA9B,GAA+C,EAA/C;AACA,WAAKd,wBAAL,CAA8Be,YAA9B,GAA6C,EAA7C;;AAEA,UAAI,KAAK+E,KAAL,CAAW,6BAAX,CAAJ,EAA+C;AAC3C,aAAKA,KAAL,CAAW,6BAAX,EAA0CkD,WAA1C;AACA,aAAKd,QAAL;AAEH;;AACD,UAAI,KAAKpC,KAAL,CAAW,gCAAX,CAAJ,EAAkD;AAC9C,aAAKA,KAAL,CAAW,gCAAX,EAA6CkD,WAA7C;AACA,aAAKd,QAAL;AACH;AACJ,KAheI;AAieLA,IAAAA,QAjeK,cAieM;AACP,UAAI9J,EAAE,GAAG,IAAT;AACA,UAAIoC,KAAK,GAAG,CAAZ;AACApC,MAAAA,EAAE,CAACe,wBAAH,CAA4B8J,OAA5B,CAAoC,UAAUC,GAAV,EAAe;AAC/C1I,QAAAA,KAAK,IAAI2I,UAAU,CAAC/K,EAAE,CAAC8H,SAAH,CAAagD,GAAG,CAAC3I,MAAjB,EAAyB4F,KAAzB,EAAD,CAAnB;AACH,OAFD;AAIA/H,MAAAA,EAAE,CAAC8D,mBAAH,GAAyB9D,EAAE,CAACe,wBAAH,CAA4B6D,MAA5B,GAAqC,CAArC,GAAyC,IAAzC,GAAgD,KAAzE;AAEA,UAAI+E,UAAU,GAAGtK,oBAAoB,CAACuK,OAArB,CAA6B,EAA7B,CAAjB;AACA,WAAKoB,cAAL,GAAsB5L,qBAAqB,CAACuK,UAAU,CAACE,YAAZ,CAA3C;AACA7J,MAAAA,EAAE,CAAC4B,wBAAH,CAA4BQ,KAA5B,GAAoClD,cAAc,CAACkD,KAAD,EAAQuH,UAAU,CAACE,YAAnB,CAAlD;AAEH,KA9eI;AA+eLoB,IAAAA,0BA/eK,YA+esBvC,GA/etB,EA+e2B;AAC5B,UAAI1I,EAAE,GAAG,IAAT;AACA,WAAK0B,2BAAL,GAAmC,IAAnC;AACA+C,MAAAA,CAAC,CAAC,mBAAD,CAAD,CAAuB6E,IAAvB,CAA4B,KAAKV,UAAL,CAAgB,MAAhB,CAA5B;AACArC,MAAAA,MAAM,CAACC,IAAP,CAAY,gCAAZ,EAA8CkC,GAAG,CAACQ,GAAlD,EAAuD,UAACtC,GAAD,EAAMC,MAAN,EAAiB;AACpE,YAAIA,MAAJ,EAAY;AACR7G,UAAAA,EAAE,CAACgB,4BAAH,GAAkC6F,MAAlC;AACH,SAFD,MAEO;AACHM,UAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAAC5D,OAAhB;AACH;AACJ,OAND;AAOH;AA1fI,GAhME;AA4rBXkI,EAAAA,OA5rBW,cA4rBD;AAAA;;AACN,QAAIlL,EAAE,GAAG,IAAT;AACA,SAAKqB,WAAL,GAAmB,IAAnB;AACA,SAAKlB,SAAL;AACA,SAAK2J,QAAL;AACA,SAAKzC,WAAL;AACAd,IAAAA,MAAM,CAAC4E,SAAP,CAAiB,4BAAjB;AACA,QAAIxB,UAAU,GAAGtK,oBAAoB,CAACuK,OAArB,CAA6B,EAA7B,CAAjB;AACA,SAAKjI,cAAL,GAAsBgI,UAAU,CAAChI,cAAjC,CARM,CASN;;AACA4E,IAAAA,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAqC7G,OAAO,CAACC,GAAR,CAAY,MAAZ,CAArC,EAA0D,UAACgH,GAAD,EAAMC,MAAN,EAAiB;AACvE,UAAIA,MAAJ,EAAY;AACR,QAAA,MAAI,CAAC7C,gBAAL,GAAwB6C,MAAM,CAAC9C,SAA/B;AACH,OAFD,MAEO;AACH,QAAA,MAAI,CAACC,gBAAL,GAAwB,EAAxB;AACH;AACJ,KAND,EAVM,CAiBN;;AACA,QAAI2F,UAAU,CAACyB,oBAAf,EAAqC;AACjC7E,MAAAA,MAAM,CAACC,IAAP,CAAY,uBAAZ,EAAqC7G,OAAO,CAACC,GAAR,CAAY,MAAZ,CAArC,EAA0D,UAAUgH,GAAV,EAAeyE,EAAf,EAAmB;AACzE,YAAIA,EAAE,KAAKhG,SAAX,EAAsB;AAClBrF,UAAAA,EAAE,CAAC+D,SAAH,GAAesH,EAAE,CAACtH,SAAlB;AACH,SAFD,MAEO;AACH/D,UAAAA,EAAE,CAAC+D,SAAH,GAAe,EAAf;AACH;AACJ,OAND;AAOH;AACJ,GAvtBU;AAwtBXuH,EAAAA,QAAQ,EAAE;AACN1C,IAAAA,UADM,cACO;AAAA;;AACT,UAAIpI,IAAI,GAAGlB,SAAS,CAACoH,MAAV,CAAiB,UAAA6E,MAAM;AAAA,eAAIA,MAAM,CAACC,IAAP,KAAgB,MAAI,CAAC9L,WAAzB;AAAA,OAAvB,EAA6D,CAA7D,EAAgE,mBAAhE,CAAX;AACA,aAAOc,IAAP;AACH;AAJK;AAxtBC,CA3lBf","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport draggable from 'vuedraggable';\nimport {formatCurrency} from \"../../../imports/api/methods/roundCurrency\";\nimport {GeneralFunction} from \"../../../imports/api/methods/generalFunction\";\nimport {getCurrencySymbolById} from \"../../../imports/api/methods/roundCurrency\";\nimport {WB_waterBillingSetup} from \"../../collection/waterBillingSetup\";\nimport compoLang from '../../../both/i18n/lang/elem-label'\n// require('cleave.js/dist/addons/cleave-phone.ac');\n// require('cleave.js/dist/addons/cleave-phone.{country}');\nimport {Pos_TransferInventoryReact} from \"../../collection/posTransferInventory\";\n\nexport default {\n    meteor: {\n        langSession() {\n            return Session.get('lang') || \"en\";\n        },\n        disabledRemove() {\n            return Session.get(\"canRemove\");\n        },\n        disabledUpdate() {\n            return Session.get(\"canUpdate\");\n        },\n        newRe() {\n            let vm = this;\n            Pos_TransferInventoryReact.find({}).fetch();\n            vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n        }\n    },\n    components: {\n        draggable\n    },\n    data() {\n        return {\n            newLoading: true,\n            keyCode: [],\n            timeStamp: [],\n            takeBarcode: '',\n\n            fullscreen: true,\n            refForm: \"\",\n            posTransferInventoryData: [],\n            posTransferInventoryShowData: {},\n            posTransferInventoryDataDisplay: [],\n            multipleSelection: [],\n            posTransferInventoryId: \"\",\n            loading: false,\n            searchData: '',\n            isSearching: false,\n            currentPage: 1,\n            currentSize: 10,\n            count: 0,\n            dialogAddTransferInventory: false,\n            dialogUpdateTransferInventory: false,\n            dialogShowTransferInventory: false,\n            isDetectedDate: false,\n            posTransferInventoryForm: {\n                itemId: \"\",\n                itemName: \"\",\n                cost: 0,\n                rawQty: 0,\n                qty: 0,\n                price: 0,\n                amount: 0,\n                total: 0,\n                transferInventoryDate: moment().toDate(),\n                note: \"\",\n                desc: \"\",\n                locationFromId: \"\",\n                locationToId: \"\",\n                code: \"\"\n\n            },\n            rules: {\n                transferInventoryDate: [{\n                    type: 'date',\n                    required: true,\n                    message: 'Please input TransferInventoryDate',\n                    trigger: 'blur'\n                }],\n                locationFromId: [{\n                    required: true,\n                    type: 'string',\n                    message: 'Please choose Location From',\n                    trigger: 'change'\n                }],\n                locationToId: [{\n                    required: true,\n                    type: 'string',\n                    message: 'Please choose Location To',\n                    trigger: 'change'\n                }]\n                // note: [{required: true, type: 'string', message: 'Please input Memo', trigger: 'blur'}],\n            },\n\n            // Options\n            itemOption: [],\n\n            dialog: true,\n            notifications: false,\n            sound: true,\n            widgets: false,\n            labelPosition: \"top\",\n            options: {\n                disabledDate(time) {\n                    return false;\n                }\n            },\n            disabledDate: false,\n            type: \"\",\n            posTransferInventoryDetail: {},\n            locationOption: [],\n            disableItem: true,\n            disableLocationFrom: false,\n            skip: 0,\n            closeDate: \"\",\n            closingStockDate: \"\"\n        }\n    },\n    mounted() {\n        this.$jQuery('body').off();\n\n        let vm = this;\n        if (vm.isDetectedDate === true) {\n            vm.options = {\n                disabledDate(time) {\n                    let min = moment().startOf(\"day\").toDate().getTime();\n                    return time.getTime() < min;\n                }\n            };\n        }\n\n        let elem = this.$jQuery('el-dialog.transferInventory');\n        let checkEvent = $._data($('body').get(0), 'events');\n        if (checkEvent.keyup.length <= 1) {\n            this.$nextTick(() => {\n                this.$jQuery('body').on('keyup', elem, this.barcodeScanTransferInventory);\n            })\n        }\n        this.$jQuery('body').on('focus', 'input[type=number]', function (e) {\n            $(this).on('wheel', function (e) {\n                e.preventDefault();\n            });\n        });\n    },\n    watch: {\n        currentSize(val) {\n            this.isSearching = true;\n            this.skip = (this.currentPage - 1) * val;\n            this.queryData(this.searchData, this.skip, val + this.skip);\n        },\n        currentPage(val) {\n            this.isSearching = true;\n            this.skip = (val - 1) * this.currentSize;\n            this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n        },\n        searchData(val) {\n            this.isSearching = true;\n            this.skip = (this.currentPage - 1) * this.currentSize;\n            this.queryData(val, this.skip, this.currentSize + this.skip);\n        },\n        \"posTransferInventoryForm.transferInventoryDate\"(val) {\n            let vm = this;\n            if (vm.dialogUpdateTransferInventory == false) {\n                vm.posTransferInventoryForm.posTransferInventoryDate = val;\n            }\n            if (vm.closeDate && vm.closeDate != \"\" && vm.closeDate != undefined) {\n                vm.options = {\n                    disabledDate(time) {\n                        let min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n                        return time.getTime() < min;\n                    }\n                }\n            } else {\n                vm.options = {\n                    disabledDate(time) {\n                        return false;\n                    }\n                }\n            }\n\n            if (vm.isDetectedDate === true) {\n                vm.options = {\n                    disabledDate(time) {\n                        let min = moment().startOf(\"day\").toDate().getTime();\n                        return time.getTime() < min;\n                    }\n                };\n            }\n\n        },\n        \"posTransferInventoryForm.itemId\"(val) {\n            if (val) {\n                this.addToTransferInventoryData(val);\n            }\n        },\n        \"posTransferInventoryForm.locationFromId\"(val) {\n            if (val) {\n                this.disableItem = false;\n            } else {\n                this.disableItem = true;\n            }\n        }\n    },\n    methods: {\n        handleCloseModal() {\n\n            this.resetForm();\n            this.refForm = \"\";\n        },\n        handleSizeChange(val) {\n            this.currentSize = val;\n        },\n        handleCurrentChange(val) {\n            this.currentPage = val;\n        },\n        _inputMaskTransferInventory() {\n            /*setTimeout(() => {\n                if ($(\".el-inputAmount\").length) {\n                    new this.$_Cleave('.el-inputAmount', {\n                        numeral: true,\n                        numeralThousandsGroupStyle: 'thousand'\n                    });\n                }\n\n                if ($(\".el-inputDR\").length) {\n                    new this.$_Cleave('.el-inputDR', {\n                        numeral: true,\n                        numeralThousandsGroupStyle: 'thousand'\n                    });\n                }\n\n                if ($(\".el-inputCR\").length) {\n                    new this.$_Cleave('.el-inputCR', {\n                        numeral: true,\n                        numeralThousandsGroupStyle: 'thousand'\n                    });\n                }\n\n\n            }, 200)*/\n        },\n        barcodeScanTransferInventory(e) {\n            if ((this.dialogAddTransferInventory === true || this.dialogUpdateTransferInventory === true) && this.posTransferInventoryForm.code === \"\") {\n                let scannerSensitivity = 100;\n                if (e.keyCode !== 13 && !isNaN(e.key)) {\n                    this.takeBarcode += e.key;\n                }\n                this.timeStamp.push(Date.now());\n                if (this.timeStamp.length > 1) {\n                    if (this.timeStamp[1] - this.timeStamp[0] >= scannerSensitivity) {\n                        this.takeBarcode = '';\n                        this.timeStamp = [];\n                    } else {\n                        if (e.keyCode === 13) {\n                            this.posTransferInventoryForm.code = this.takeBarcode;\n                            this.addToTransferInventoryData(null);\n                            this.timeStamp = [];\n                            this.takeBarcode = ''\n                        }\n                    }\n                }\n            }\n        },\n        queryData: _.debounce(function (val, skip, limit) {\n            this.newLoading = true;\n            Meteor.call('queryTransferInventory', {\n                q: val,\n                filter: this.filter,\n                rolesArea: Session.get('area'),\n                options: {skip: skip || 0, limit: limit || 10}\n            }, (err, result) => {\n                if (!err) {\n                    this.posTransferInventoryDataDisplay = result.content;\n                    this.count = result.countTransferInventory;\n                }\n                this.isSearching = false;\n                this.newLoading = false;\n            });\n        }, 300),\n        itemOpt(query) {\n            if (!!query) {\n                setTimeout(() => {\n                    Meteor.call('queryItemOption', query, (err, result) => {\n                        if (!err) {\n                            this.itemOption = result;\n                        } else {\n                            console.log(err.message);\n                        }\n                    })\n                }, 200);\n            } else {\n                Meteor.call('queryItemOption', \"\", (err, result) => {\n                    if (!err) {\n                        this.itemOption = result;\n                    } else {\n                        console.log(err.message);\n                    }\n                })\n            }\n        },\n        locationOpt() {\n            Meteor.call('queryLocationOption', (err, result) => {\n                this.locationOption = result;\n            })\n        },\n\n        saveTransferInventory(isCloseDialog, event) {\n            event.preventDefault();\n            let vm = this;\n            let item = vm.posTransferInventoryData;\n\n            this.$refs[\"posTransferInventoryFormAdd\"].validate((valid) => {\n                if (valid) {\n                    let posTransferInventoryDoc = {\n                        total: vm.$_numeral(vm.posTransferInventoryForm.total).value(),\n                        transferInventoryDate: moment(vm.posTransferInventoryForm.transferInventoryDate).toDate(),\n                        transferInventoryDateName: moment(vm.posTransferInventoryForm.transferInventoryDate).format(\"DD/MM/YYYY\"),\n\n                        note: vm.posTransferInventoryForm.note,\n\n                        rolesArea: Session.get('area'),\n                        item: item,\n                        locationFromId: vm.posTransferInventoryForm.locationFromId,\n                        locationToId: vm.posTransferInventoryForm.locationToId,\n\n                    };\n                    posTransferInventoryDoc.transaction = vm.posTransferInventoryData;\n                    Meteor.call(\"insertTransferInventory\", posTransferInventoryDoc, (err, result) => {\n                        if (!err) {\n                            vm.$message({\n                                duration: 1000,\n                                message: `Save Successfully!`,\n                                type: 'success'\n                            });\n                            Session.set(\"transactionActionNumber\", (Session.get(\"transactionActionNumber\") || 0) + 1);\n\n                            if (isCloseDialog) {\n                                this.dialogAddTransferInventory = false;\n                            }\n                            vm.resetForm();\n                        }\n                    })\n                }\n            })\n        },\n        updateTransferInventory(id) {\n            event.preventDefault();\n            let vm = this;\n            vm.$refs[\"posTransferInventoryFormUpdate\"].validate((valid) => {\n                if (valid) {\n                    let posTransferInventoryDoc = {\n                        total: vm.$_numeral(vm.posTransferInventoryForm.total).value(),\n                        transferInventoryDate: moment(vm.posTransferInventoryForm.transferInventoryDate).toDate(),\n                        transferInventoryDateName: moment(vm.posTransferInventoryForm.transferInventoryDate).format(\"DD/MM/YYYY\"),\n\n                        note: vm.posTransferInventoryForm.note,\n\n                        rolesArea: Session.get('area'),\n                        item: vm.posTransferInventoryData,\n                        locationFromId: vm.posTransferInventoryForm.locationFromId,\n                        locationToId: vm.posTransferInventoryForm.locationToId,\n\n                    };\n                    posTransferInventoryDoc.item = vm.posTransferInventoryData;\n                    Meteor.call(\"updateTransferInventory\", posTransferInventoryDoc, id, (err, result) => {\n                        if (!err) {\n                            vm.$message({\n                                duration: 1000,\n                                message: `Save Successfully!`,\n                                type: 'success'\n                            });\n                            Session.set(\"transactionActionNumber\", (Session.get(\"transactionActionNumber\") || 0) + 1);\n\n                            vm.dialogUpdateTransferInventory = false;\n\n                            vm.resetForm();\n                        } else {\n                            vm.$message({\n                                duration: 1000,\n                                message: err.message,\n                                type: 'success'\n                            });\n                        }\n                    })\n                }\n            })\n\n        },\n        removeTransferInventory(index, row, rows) {\n            let vm = this;\n\n            if (vm.isDetectedDate === true && moment().startOf(\"day\").toDate().getTime() >= row.transferInventoryDate.getTime()) {\n                vm.$message({\n                    duration: 1000,\n                    message: this.langConfig['expiredDateForAction'],\n                    type: 'error'\n                });\n                return false;\n            }\n\n\n            //Check with closing stock\n            if (vm.closingStockDate && vm.closingStockDate !== \"\" && moment(vm.closingStockDate).endOf(\"day\").toDate().getTime() >= row.transferInventoryDate.getTime()) {\n                vm.$message({\n                    duration: 1000,\n                    message: this.langConfig['expiredDateForAction'],\n                    type: 'error'\n                });\n                return false;\n            }\n\n            //Check with closing stock\n            if (vm.closeDate && vm.closeDate !== \"\" && moment(vm.closeDate).endOf(\"day\").toDate().getTime() >= row.transferInventoryDate.getTime()) {\n                vm.$message({\n                    duration: 1000,\n                    message: this.langConfig['expiredDateForAction'],\n                    type: 'error'\n                });\n                return false;\n            }\n\n            vm.$confirm('This will permanently delete the Item. Continue?', 'Warning', {\n                confirmButtonText: 'OK',\n                cancelButtonText: 'Cancel',\n                type: 'warning'\n            }).then(() => {\n                Meteor.call(\"removeTransferInventory\", row._id, row, (err, result) => {\n                    if (!err) {\n                        rows.splice(index, 1);\n                        vm.$message({\n                            message: `លុប ${row.transferInventoryDateName}​ បានជោគជ័យ`,\n                            type: 'success'\n                        });\n                        Session.set(\"transactionActionNumber\", (Session.get(\"transactionActionNumber\") || 0) + 1);\n\n                    } else {\n                        vm.$message({\n                            type: 'error',\n                            message: 'Delete Fialed'\n                        });\n                    }\n\n                })\n\n\n            }).catch(() => {\n                vm.$message({\n                    type: 'info',\n                    message: 'Delete canceled'\n                });\n            });\n\n        },\n        popupTransferInventoryAdd() {\n            this.refForm = \"posTransferInventoryFormAdd\";\n            this.resetForm();\n            this.itemOpt();\n            let vm = this;\n            $(\".el-dialog__title\").text(this.langConfig['add']);\n\n            if (vm.closingStockDate !== \"\") {\n                if (vm.closeDate && vm.closeDate !== \"\" && vm.closingStockDate.getTime() < vm.closeDate.getTime()) {\n                    vm.options = {\n                        disabledDate(time) {\n                            let min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n                            return time.getTime() < min;\n                        }\n                    };\n                    vm.posTransferInventoryForm.transferInventoryDate = moment(vm.closeDate).add(1, \"days\").toDate();\n                } else {\n                    vm.options = {\n                        disabledDate(time) {\n                            let min = moment(vm.closingStockDate).startOf(\"day\").add(1, \"days\").toDate().getTime();\n                            return time.getTime() < min;\n                        }\n                    };\n                    vm.posTransferInventoryForm.transferInventoryDate = moment(vm.closingStockDate).add(1, \"days\").toDate();\n                }\n            }\n        },\n        popupTransferInventoryUpdate(index, row, scope) {\n            let vm = this;\n            if (vm.isDetectedDate === true && moment().startOf(\"day\").toDate().getTime() >= row.transferInventoryDate.getTime()) {\n                vm.$message({\n                    duration: 1000,\n                    message: this.langConfig['expiredDateForAction'],\n                    type: 'error'\n                });\n                return false;\n            }\n\n            //Check with closing stock\n            if (vm.closingStockDate && vm.closingStockDate !== \"\" && moment(vm.closingStockDate).endOf(\"day\").toDate().getTime() >= row.transferInventoryDate.getTime()) {\n                vm.$message({\n                    duration: 1000,\n                    message: this.langConfig['expiredDateForAction'],\n                    type: 'error'\n                });\n                return false;\n            }\n\n            //Check with closing stock\n            if (vm.closeDate && vm.closeDate !== \"\" && moment(vm.closeDate).endOf(\"day\").toDate().getTime() >= row.transferInventoryDate.getTime()) {\n                vm.$message({\n                    duration: 1000,\n                    message: this.langConfig['expiredDateForAction'],\n                    type: 'error'\n                });\n                return false;\n            }\n\n            this.refForm = \"posTransferInventoryFormUpdate\";\n\n            this.resetForm();\n            this.itemOpt();\n            $(\".el-dialog__title\").text(this.langConfig['update']);\n            vm.dialogUpdateTransferInventory = true;\n            vm.findTransferInventoryById(scope);\n\n\n        },\n        findTransferInventoryById(doc) {\n            let vm = this;\n            this.posTransferInventoryId = doc.row._id;\n            let companyDoc = WB_waterBillingSetup.findOne({});\n            Meteor.call(\"queryTransferInventoryById\", doc.row._id, (err, data) => {\n                vm.posTransferInventoryData = [];\n                if (data) {\n                    vm.posTransferInventoryData = data.item;\n                    vm.posTransferInventoryForm = {\n                        total: formatCurrency(data.total, companyDoc.baseCurrency),\n                        transferInventoryDate: moment(data.transferInventoryDate).toDate(),\n                        transferInventoryDateName: moment(data.transferInventoryDate).format(\"DD/MM/YYYY\"),\n\n                        note: data.note,\n\n                        rolesArea: data.rolesArea,\n                        item: data.item,\n                        locationFromId: data.locationFromId,\n                        locationToId: data.locationToId,\n                    }\n                    vm.getTotal();\n                }\n            })\n\n        },\n        addToTransferInventoryData(val) {\n            let vm = this;\n            if (val === null) {\n                val = vm.posTransferInventoryForm.code;\n            }\n            if (val === \"\" || val === undefined) {\n                this.$message({\n                    duration: 1000,\n                    message: \"Item Can't Empty!!\",\n                    type: 'error'\n                });\n                let s = new buzz.sound('/the-calling.mp3');\n                s.play();\n                vm.posTransferInventoryForm.itemId = \"\";\n                vm.posTransferInventoryForm.code = \"\";\n                return false;\n            }\n\n            let isFound = vm.posTransferInventoryData.find(function (element) {\n                return element.itemId === val || element.code === val;\n            });\n            if (isFound !== undefined) {\n                this.$message({\n                    type: 'error',\n                    message: 'Item already add!'\n                });\n                let s = new buzz.sound('/the-calling.mp3');\n                s.play();\n                vm.posTransferInventoryForm.itemId = \"\";\n                vm.posTransferInventoryForm.code = \"\";\n                return false;\n            }\n            Meteor.call(\"queryPosProductById\", val, (err, dataRaw) => {\n                if (dataRaw) {\n                    Meteor.call(\"queryPosAverageCostById\", dataRaw._id, Session.get(\"area\"), this.posTransferInventoryForm.locationFromId, (err, data) => {\n                        if (data) {\n                            vm.posTransferInventoryData.push({\n                                itemId: dataRaw._id,\n                                itemName: dataRaw.code + \" : \" + dataRaw.name,\n                                cost: formatCurrency(data.averageCost),\n                                rawQty: vm.$_numeral(data.qtyEnding).value(),\n                                qty: 0,\n                                code: dataRaw.code,\n                                amount: 0,\n                                desc: \"\"\n                            });\n                            vm.disableLocationFrom = vm.posTransferInventoryData.length > 0 ? true : false;\n                            vm.posTransferInventoryForm.itemId = \"\";\n                            vm.posTransferInventoryForm.code = \"\";\n                            vm.$message({\n                                duration: 1000,\n                                message: `បន្ថែម ` + dataRaw.code + \" : \" + dataRaw.name + \" បានជោគជ័យ !\",\n                                type: 'success'\n                            });\n\n                            this.getTotal();\n                        } else {\n                            vm.$message({\n                                duration: 3000,\n                                message: \"ទំនិញនេះ អស់ពីស្តុកហើយ!!\",\n                                type: 'error'\n                            });\n                            let s = new buzz.sound('/the-calling.mp3');\n                            s.play();\n                            vm.posTransferInventoryForm.itemId = \"\";\n                            vm.posTransferInventoryForm.code = \"\";\n                        }\n\n                    })\n                } else {\n                    vm.$message({\n                        duration: 1000,\n                        message: \"មិនមានឈ្មេាះនេះឡើយ!!\",\n                        type: 'error'\n                    });\n                    let s = new buzz.sound('/the-calling.mp3');\n                    s.play();\n                    vm.posTransferInventoryForm.itemId = \"\";\n                    vm.posTransferInventoryForm.code = \"\";\n                }\n            })\n        },\n        removeTransferInventoryDetailByIndex(index, row) {\n            this.$confirm('This will permanently delete the Item. Continue?', 'Warning', {\n                confirmButtonText: 'OK',\n                cancelButtonText: 'Cancel',\n                type: 'warning'\n            }).then(() => {\n\n                this.posTransferInventoryData.splice(index, 1);\n                this.$message({\n                    message: `លុប ${row.itemName} បានជោគជ័យ`,\n                    type: 'success'\n                });\n                this.getTotal();\n                this.disableLocationFrom = this.posTransferInventoryData.length > 0 ? true : false;\n\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: 'Delete canceled'\n                });\n            });\n        },\n        updateTransferInventoryDetail(row, index) {\n            if (row.qty > row.rawQty) {\n                this.$message({\n                    type: 'error',\n                    message: 'ស្តុកមានមិនគ្រប់គ្រាន់'\n                });\n            }\n            row.amount = formatCurrency(this.$_numeral(row.cost).value() * row.qty);\n            this.posTransferInventoryData[index] = row;\n            let newIndex = index + 1;\n            this.getTotal();\n        },\n        cancel() {\n            this.resetForm();\n            this.$message({\n                type: 'info',\n                message: 'Canceled'\n            });\n        },\n        resetForm() {\n            this.posTransferInventoryData = [];\n            this.posTransferInventoryForm.locationFromId = \"\";\n            this.posTransferInventoryForm.locationToId = \"\";\n\n            if (this.$refs[\"posTransferInventoryFormAdd\"]) {\n                this.$refs[\"posTransferInventoryFormAdd\"].resetFields();\n                this.getTotal();\n\n            }\n            if (this.$refs[\"posTransferInventoryFormUpdate\"]) {\n                this.$refs[\"posTransferInventoryFormUpdate\"].resetFields();\n                this.getTotal();\n            }\n        },\n        getTotal() {\n            let vm = this;\n            let total = 0;\n            vm.posTransferInventoryData.forEach(function (obj) {\n                total += parseFloat(vm.$_numeral(obj.amount).value());\n            });\n\n            vm.disableLocationFrom = vm.posTransferInventoryData.length > 0 ? true : false;\n\n            let companyDoc = WB_waterBillingSetup.findOne({});\n            this.currencySymbol = getCurrencySymbolById(companyDoc.baseCurrency);\n            vm.posTransferInventoryForm.total = formatCurrency(total, companyDoc.baseCurrency);\n\n        },\n        popupTransferInventoryShow(row) {\n            let vm = this;\n            this.dialogShowTransferInventory = true;\n            $(\".el-dialog__title\").text(this.langConfig['show']);\n            Meteor.call(\"queryTransferInventoryByIdShow\", row._id, (err, result) => {\n                if (result) {\n                    vm.posTransferInventoryShowData = result;\n                } else {\n                    console.log(err.message);\n                }\n            })\n        }\n    },\n    created() {\n        let vm = this;\n        this.isSearching = true;\n        this.queryData();\n        this.getTotal();\n        this.locationOpt();\n        Meteor.subscribe('Pos_TransferInventoryReact');\n        let companyDoc = WB_waterBillingSetup.findOne({});\n        this.isDetectedDate = companyDoc.isDetectedDate;\n        //Get Last Closing Stock\n        Meteor.call(\"queryLastClosingStock\", Session.get('area'), (err, result) => {\n            if (result) {\n                this.closingStockDate = result.closeDate;\n            } else {\n                this.closingStockDate = \"\";\n            }\n        })\n        //Get Last CLosing entry from Account\n        if (companyDoc.integratedPosAccount) {\n            Meteor.call(\"queryLastClosingEntry\", Session.get(\"area\"), function (err, re) {\n                if (re !== undefined) {\n                    vm.closeDate = re.closeDate;\n                } else {\n                    vm.closeDate = \"\";\n                }\n            })\n        }\n    },\n    computed: {\n        langConfig() {\n            let data = compoLang.filter(config => config.lang === this.langSession)[0]['transferInventory'];\n            return data;\n        }\n    }\n}\n\n\n"]},"sourceType":"script","hash":"fc58ddc292ec01ed35a21f983132aa637d0f0a69"}
