{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/activity/imports/vue/ui/report/balanceSheet.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/activity/imports/vue/ui/report/balanceSheet.vue","filename":"/home/snr/Desktop/Project/activity/imports/vue/ui/report/balanceSheet.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/activity","root":"/home/snr/Desktop/Project/activity","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/snr/Desktop/Project/activity/imports/vue/ui/report/balanceSheet.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/activity/imports/vue/ui/report/balanceSheet.vue"}},"code":"var module1 = module;\nvar PageA4;\nmodule1.link(\"/imports/vue/ui/report/page/PageA4.vue\", {\n  \"default\": function (v) {\n    PageA4 = v;\n  }\n}, 0);\nvar GenerateFile;\nmodule1.link(\"/imports/api/mixins/file-saver-fn.js\", {\n  GenerateFile: function (v) {\n    GenerateFile = v;\n  }\n}, 1);\nmodule1.exportDefault({\n  mixins: [GenerateFile],\n  mounted: function () {\n    this.$jQuery('body').off();\n  },\n  data: function () {\n    return {\n      params: {\n        branch: '',\n        area: '',\n        currency: '',\n        checkedAccountType: [],\n        account: \"\",\n        date: moment().toDate(),\n        exchangeId: \"\"\n      },\n      rolesArea: '',\n      activeName: '1',\n      balanceSheetHtml: \"\",\n      labelPosition: 'top',\n      branchOptions: [],\n      areaOptions: [],\n      exchangeOptions: [],\n      currencyOptions: [{\n        label: \"KHR\",\n        value: \"KHR\"\n      }, {\n        label: \"USD\",\n        value: \"USD\"\n      }, {\n        label: \"THB\",\n        value: \"THB\"\n      }],\n      accountOptions: [],\n      waterBillingSetup: {\n        khName: '',\n        enName: ''\n      },\n      loading: false,\n      exportLoading: false,\n      checkAll: false,\n      accountTypeOptions: [],\n      accountTypes: [],\n      isIndeterminate: true,\n      dateHeader: \"\",\n      currencyHeader: \"\"\n    };\n  },\n  meteor: {\n    rolesArea: function () {\n      return Session.get('area');\n    }\n  },\n  watch: {\n    \"params.branch\": function (val) {\n      this.params.area = \"\";\n      this.fetchArea(val);\n    },\n    \"params.checkedAccountType\": function (val) {\n      this.fetchAccount(val);\n    },\n    \"balanceSheetHtml\": function (val) {\n      var vm = this;\n\n      if (val) {\n        this.$nextTick(function () {\n          //Do jQuery stuff here\n          $(\".rowClick\").dblclick(function (e, t) {\n            var params = {};\n            var queryParams = {};\n            queryParams.account = e.currentTarget.id;\n            queryParams.area = Session.get(\"area\");\n            queryParams.module = Session.get(\"module\");\n            queryParams.selectBranch = vm.params.branch;\n            queryParams.selectArea = vm.params.area;\n            queryParams.currency = vm.params.currency;\n            var dateList = [];\n            dateList.push(moment(vm.params.date).startOf(\"months\").toDate());\n            dateList.push(moment(vm.params.date).toDate());\n            queryParams.date = dateList;\n            queryParams.exchangeId = vm.params.exchangeId;\n            Meteor.call(\"queryChartAccountById\", e.currentTarget.id, function (err, result) {\n              queryParams.checkedAccountType = result.accountTypeId;\n              var path = FlowRouter.path(\"acc.ledgerReportNewPage\", params, queryParams);\n              window.open(path, \"_blank\");\n            });\n          });\n        });\n      }\n    }\n  },\n  created: function () {\n    var _this = this;\n\n    Meteor.call('getWaterBillingSetup', Session.get('area'), function (err, result) {\n      if (result) {\n        _this.waterBillingSetup = result;\n      }\n    });\n    this.fetchAccountType();\n    this.fetchExchange();\n    this.fetchBranch();\n  },\n  methods: {\n    fetchAccountType: function () {\n      var _this2 = this;\n\n      Meteor.call('queryAccountTypeOptionReport', function (err, result) {\n        if (result) {\n          _this2.accountTypeOptions = result.listWithId;\n          _this2.accountTypes = result.list;\n        }\n      });\n    },\n    fetchExchange: function () {\n      var _this3 = this;\n\n      Meteor.call('queryExchangeOptionReport', function (err, result) {\n        if (result) {\n          _this3.exchangeOptions = result;\n        }\n      });\n    },\n    fetchAccount: function (accountTypeList) {\n      var _this4 = this;\n\n      var selector = {};\n      selector.accountTypeId = {\n        $in: accountTypeList\n      };\n      Meteor.call('queryChartAccountOptionReport', selector, function (err, result) {\n        if (result) {\n          _this4.accountOptions = result;\n        }\n      });\n    },\n    fetchBranch: function () {\n      var _this5 = this;\n\n      Meteor.call(\"queryRoleBranchOptionReport\", function (err, result) {\n        if (result) {\n          _this5.branchOptions = result;\n        }\n      });\n    },\n    fetchArea: function (branchList) {\n      var _this6 = this;\n\n      Meteor.call(\"queryRoleAreaOptionReport\", branchList, function (err, result) {\n        if (result) {\n          _this6.areaOptions = result;\n        }\n      });\n    },\n    handleRun: function () {\n      var _this7 = this;\n\n      this.loading = true;\n\n      if (this.params.date == \"\" || this.params.date == undefined) {\n        alertify.error(\"Date can't not empty!!\");\n        this.loading = false;\n        return false;\n      }\n\n      if (this.params.exchangeId == \"\" || this.params.exchangeId == undefined) {\n        alertify.error(\"Exchange can't not empty!!\");\n        this.loading = false;\n        return false;\n      }\n\n      Meteor.call('balanceSheetReport', this.params, function (err, result) {\n        if (result) {\n          _this7.balanceSheetHtml = result.balanceSheetHTML;\n          _this7.dateHeader = result.dateHeader;\n          _this7.currencyHeader = result.currencyHeader;\n        }\n\n        _this7.loading = false;\n      });\n    },\n    handleCheckAllChange: function () {\n      this.params.checkedAccountType = this.checkAll ? this.accountTypeOptions : [];\n      this.isIndeterminate = false;\n    },\n    handleCheckedAccountTypeChange: function (value) {\n      var checkedCount = value.length;\n      this.checkAll = checkedCount === this.accountTypes.length;\n      this.isIndeterminate = checkedCount > 0 && checkedCount < this.accountTypes.length;\n    }\n  },\n  computed: {\n    dataExist: function () {\n      return this.journalsData.length > 0;\n    }\n  },\n  components: {\n    a4: PageA4\n  }\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/activity/imports/vue/ui/report/balanceSheet.vue"],"names":["module1","module","PageA4","link","v","GenerateFile","exportDefault","mixins","mounted","$jQuery","off","data","params","branch","area","currency","checkedAccountType","account","date","moment","toDate","exchangeId","rolesArea","activeName","balanceSheetHtml","labelPosition","branchOptions","areaOptions","exchangeOptions","currencyOptions","label","value","accountOptions","waterBillingSetup","khName","enName","loading","exportLoading","checkAll","accountTypeOptions","accountTypes","isIndeterminate","dateHeader","currencyHeader","meteor","Session","get","watch","val","fetchArea","fetchAccount","vm","$nextTick","$","dblclick","e","t","queryParams","currentTarget","id","selectBranch","selectArea","dateList","push","startOf","Meteor","call","err","result","accountTypeId","path","FlowRouter","window","open","created","fetchAccountType","fetchExchange","fetchBranch","methods","listWithId","list","accountTypeList","selector","$in","branchList","handleRun","undefined","alertify","error","balanceSheetHTML","handleCheckAllChange","handleCheckedAccountTypeChange","checkedCount","length","computed","dataExist","journalsData","components","a4"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PageA4 from '/imports/vue/ui/report/page/PageA4.vue';\nimport {GenerateFile} from '/imports/api/mixins/file-saver-fn.js';\n\nexport default {\n    mixins: [GenerateFile],\n    mounted() {\n        this.$jQuery('body').off();\n\n    },\n    data() {\n        return {\n            params: {\n                branch: '',\n                area: '',\n                currency: '',\n                checkedAccountType: [],\n                account: \"\",\n                date: moment().toDate(),\n                exchangeId: \"\"\n            },\n            rolesArea: '',\n            activeName: '1',\n            balanceSheetHtml: \"\",\n            labelPosition: 'top',\n            branchOptions: [],\n            areaOptions: [],\n            exchangeOptions: [],\n            currencyOptions: [\n                {label: \"KHR\", value: \"KHR\"},\n                {label: \"USD\", value: \"USD\"},\n                {label: \"THB\", value: \"THB\"},\n            ],\n            accountOptions: [],\n\n            waterBillingSetup: {\n                khName: '',\n                enName: ''\n            },\n\n            loading: false,\n            exportLoading: false,\n\n            checkAll: false,\n            accountTypeOptions: [],\n            accountTypes: [],\n            isIndeterminate: true,\n            dateHeader: \"\",\n            currencyHeader: \"\",\n        };\n    },\n    meteor: {\n        rolesArea() {\n            return Session.get('area');\n        }\n    },\n    watch: {\n\n        \"params.branch\"(val) {\n            this.params.area = \"\";\n            this.fetchArea(val);\n        },\n        \"params.checkedAccountType\"(val) {\n            this.fetchAccount(val);\n        },\n        \"balanceSheetHtml\"(val) {\n            let vm=this;\n            if (val) {\n                this.$nextTick(() => {\n                    //Do jQuery stuff here\n                    $(\".rowClick\").dblclick(function (e, t) {\n                        let params = {};\n                        let queryParams = {};\n                        queryParams.account = e.currentTarget.id;\n                        queryParams.area = Session.get(\"area\");\n                        queryParams.module = Session.get(\"module\");\n\n                        queryParams.selectBranch = vm.params.branch;\n                        queryParams.selectArea = vm.params.area;\n                        queryParams.currency = vm.params.currency;\n                        let dateList = [];\n                        dateList.push(moment(vm.params.date).startOf(\"months\").toDate());\n                        dateList.push(moment(vm.params.date).toDate());\n\n                        queryParams.date = dateList;\n                        queryParams.exchangeId = vm.params.exchangeId;\n\n                        Meteor.call(\"queryChartAccountById\", e.currentTarget.id, (err, result) => {\n                            queryParams.checkedAccountType = result.accountTypeId;\n                            let path = FlowRouter.path(\"acc.ledgerReportNewPage\", params, queryParams);\n                            window.open(path, \"_blank\");\n                        })\n\n                    });\n                })\n            }\n        }\n    },\n    created() {\n        Meteor.call('getWaterBillingSetup', Session.get('area'), (err, result) => {\n            if (result) {\n                this.waterBillingSetup = result;\n            }\n        })\n        this.fetchAccountType();\n        this.fetchExchange();\n        this.fetchBranch();\n    },\n    methods: {\n\n        fetchAccountType() {\n            Meteor.call('queryAccountTypeOptionReport', (err, result) => {\n                if (result) {\n                    this.accountTypeOptions = result.listWithId;\n                    this.accountTypes = result.list;\n                }\n            });\n        },\n        fetchExchange() {\n            Meteor.call('queryExchangeOptionReport', (err, result) => {\n                if (result) {\n                    this.exchangeOptions = result;\n                }\n            });\n        },\n        fetchAccount(accountTypeList) {\n            let selector = {};\n            selector.accountTypeId = {$in: accountTypeList}\n            Meteor.call('queryChartAccountOptionReport', selector, (err, result) => {\n                if (result) {\n                    this.accountOptions = result;\n                }\n            });\n        },\n        fetchBranch() {\n            Meteor.call(\"queryRoleBranchOptionReport\", (err, result) => {\n                if (result) {\n                    this.branchOptions = result;\n                }\n            })\n        },\n        fetchArea(branchList) {\n            Meteor.call(\"queryRoleAreaOptionReport\", branchList, (err, result) => {\n                if (result) {\n                    this.areaOptions = result;\n                }\n            })\n        },\n        handleRun() {\n            this.loading = true;\n\n            if (this.params.date == \"\" || this.params.date == undefined) {\n                alertify.error(\"Date can't not empty!!\");\n                this.loading = false;\n                return false;\n            }\n            if (this.params.exchangeId == \"\" || this.params.exchangeId == undefined) {\n                alertify.error(\"Exchange can't not empty!!\");\n                this.loading = false;\n                return false;\n            }\n\n            Meteor.call('balanceSheetReport', this.params, (err, result) => {\n                if (result) {\n                    this.balanceSheetHtml = result.balanceSheetHTML;\n                    this.dateHeader = result.dateHeader;\n                    this.currencyHeader = result.currencyHeader;\n                }\n                this.loading = false;\n            });\n        },\n        handleCheckAllChange() {\n            this.params.checkedAccountType = this.checkAll ? this.accountTypeOptions : [];\n            this.isIndeterminate = false;\n        },\n        handleCheckedAccountTypeChange(value) {\n            let checkedCount = value.length;\n            this.checkAll = checkedCount === this.accountTypes.length;\n            this.isIndeterminate = checkedCount > 0 && checkedCount < this.accountTypes.length;\n        },\n\n\n    },\n    computed: {\n        dataExist() {\n            return this.journalsData.length > 0;\n        }\n    },\n    components: {\n        a4: PageA4\n    },\n}\n"]},"sourceType":"script","hash":"eee52edc1e314bfb12179f8b4be48e5f0e7323d1"}
