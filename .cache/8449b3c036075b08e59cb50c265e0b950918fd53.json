{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/activity/imports/vue/ui/posConvertInventory.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/activity/imports/vue/ui/posConvertInventory.vue","filename":"/home/snr/Desktop/Project/activity/imports/vue/ui/posConvertInventory.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/activity","root":"/home/snr/Desktop/Project/activity","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/snr/Desktop/Project/activity/imports/vue/ui/posConvertInventory.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/activity/imports/vue/ui/posConvertInventory.vue"}},"code":"var compoLang;\nmodule.link(\"../../../both/i18n/lang/elem-label\", {\n  \"default\": function (v) {\n    compoLang = v;\n  }\n}, 0);\nvar Pos_ConvertInventoryReact;\nmodule.link(\"../../collection/posConvertInventory\", {\n  Pos_ConvertInventoryReact: function (v) {\n    Pos_ConvertInventoryReact = v;\n  }\n}, 1);\nvar WB_waterBillingSetup;\nmodule.link(\"../../collection/waterBillingSetup\", {\n  WB_waterBillingSetup: function (v) {\n    WB_waterBillingSetup = v;\n  }\n}, 2);\nmodule.exportDefault({\n  meteor: {\n    langSession: function () {\n      return Session.get('lang') || \"en\";\n    },\n    disabledRemove: function () {\n      return Session.get(\"canRemove\");\n    },\n    disabledUpdate: function () {\n      return Session.get(\"canUpdate\");\n    },\n    newRe: function () {\n      var vm = this;\n      Pos_ConvertInventoryReact.find({}).fetch();\n      vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n    }\n  },\n  mounted: function () {\n    this.$jQuery('body').off();\n    var vm = this;\n\n    if (vm.isDetectedDate === true) {\n      vm.options = {\n        disabledDate: function (time) {\n          var min = moment().startOf(\"day\").toDate().getTime();\n          return time.getTime() < min;\n        }\n      };\n    }\n  },\n  data: function () {\n    return {\n      newLoading: true,\n      posConvertInventoryData: [],\n      loading: false,\n      searchData: '',\n      isSearching: false,\n      currentPage: 1,\n      currentSize: 10,\n      count: 0,\n      dialogAddPosConvertInventory: false,\n      dialogUpdatePosConvertInventory: false,\n      convertData: [{\n        productId: \"\",\n        qty: 0\n      }],\n      posConvertInventoryForm: {\n        productId: \"\",\n        locationId: \"\",\n        qty: 0,\n        date: moment().toDate(),\n        description: \"\",\n        convert: [],\n        _id: \"\"\n      },\n      rules: {\n        productId: [{\n          required: true,\n          type: 'string',\n          message: 'Please input product',\n          trigger: 'change'\n        }],\n        locationId: [{\n          required: true,\n          type: 'string',\n          message: 'Please input Location',\n          trigger: 'change'\n        }],\n        qty: [{\n          required: true,\n          message: 'Please input qty',\n          trigger: 'blur'\n        }],\n        date: [{\n          type: 'date',\n          required: true,\n          message: 'Please input Date',\n          trigger: 'blur'\n        }]\n      },\n      // Options\n      productOption: [],\n      locationOption: [],\n      skip: 0,\n      isDetectedDate: false,\n      options: {\n        disabledDate: function (time) {\n          return false;\n        }\n      },\n      disabledDate: false,\n      closingStockDate: \"\",\n      closeDate: \"\"\n    };\n  },\n  watch: {\n    currentSize: function (val) {\n      this.isSearching = true;\n      this.skip = (this.currentPage - 1) * val;\n      this.queryData(this.searchData, this.skip, val + this.skip);\n    },\n    currentPage: function (val) {\n      this.isSearching = true;\n      this.skip = (val - 1) * this.currentSize;\n      this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n    },\n    searchData: function (val) {\n      this.isSearching = true;\n      this.skip = (this.currentPage - 1) * this.currentSize;\n      this.queryData(val, this.skip, this.currentSize + this.skip);\n    }\n  },\n  methods: {\n    handleSizeChange: function (val) {\n      this.currentSize = val;\n    },\n    handleCurrentChange: function (val) {\n      this.currentPage = val;\n    },\n    indexMethod: function (index) {\n      return index + 1;\n    },\n    queryData: _.debounce(function (val, skip, limit) {\n      var _this = this;\n\n      this.newLoading = true;\n      Meteor.call('queryPosConvertInventory', {\n        q: val,\n        filter: this.filter,\n        rolesArea: Session.get('area'),\n        options: {\n          skip: skip || 0,\n          limit: limit || 10\n        }\n      }, function (err, result) {\n        if (!err) {\n          _this.posConvertInventoryData = result.content;\n          _this.count = result.countPosConvertInventory;\n        }\n\n        _this.isSearching = false;\n        _this.newLoading = false;\n      });\n    }, 300),\n    productOpt: function (query) {\n      var _this2 = this;\n\n      if (!!query) {\n        setTimeout(function () {\n          Meteor.call('queryItemOption', query, function (err, result) {\n            if (!err) {\n              _this2.productOption = result;\n            } else {\n              console.log(err.message);\n            }\n          });\n        }, 200);\n      } else {\n        Meteor.call('queryItemOption', \"\", function (err, result) {\n          if (!err) {\n            _this2.productOption = result;\n          } else {\n            console.log(err.message);\n          }\n        });\n      }\n    },\n    locationOpt: function () {\n      var _this3 = this;\n\n      var selector = {};\n      Meteor.call('queryLocationOption', selector, function (err, result) {\n        _this3.locationOption = result;\n      });\n    },\n    savePosConvertInventory: function (event) {\n      event.preventDefault();\n      var vm = this;\n      this.$refs[\"posConvertInventoryFormAdd\"].validate(function (valid) {\n        if (valid) {\n          var posConvertInventoryDoc = {\n            productId: vm.posConvertInventoryForm.productId,\n            locationId: vm.posConvertInventoryForm.locationId,\n            date: vm.posConvertInventoryForm.date,\n            dateName: moment(vm.posConvertInventoryForm.date).format(\"DD/MM/YYYY\"),\n            qty: vm.posConvertInventoryForm.qty,\n            convert: vm.convertData,\n            rolesArea: Session.get('area'),\n            description: vm.posConvertInventoryForm.description\n          };\n          Meteor.call(\"insertPosConvertInventory\", posConvertInventoryDoc, function (err, result) {\n            if (!err) {\n              vm.$message({\n                duration: 1000,\n                message: \"Save Successfully!\",\n                type: 'success'\n              });\n              vm.dialogAddPosConvertInventory = false;\n              vm.productOpt();\n              vm.$refs[\"posConvertInventoryFormAdd\"].resetFields();\n            } else {\n              vm.$message({\n                duration: 1000,\n                message: err.message,\n                type: 'error'\n              });\n            }\n          });\n        }\n      });\n    },\n    updatePosConvertInventory: function () {\n      var vm = this;\n      this.$refs[\"posConvertInventoryFormUpdate\"].validate(function (valid) {\n        if (valid) {\n          var posConvertInventoryDoc = {\n            _id: vm.posConvertInventoryForm._id,\n            productId: vm.posConvertInventoryForm.productId,\n            locationId: vm.posConvertInventoryForm.locationId,\n            date: vm.posConvertInventoryForm.date,\n            dateName: moment(vm.posConvertInventoryForm.date).format(\"DD/MM/YYYY\"),\n            qty: vm.posConvertInventoryForm.qty,\n            convert: vm.convertData,\n            rolesArea: Session.get('area'),\n            description: vm.posConvertInventoryForm.description\n          };\n          Meteor.call(\"updatePosConvertInventory\", posConvertInventoryDoc, function (err, result) {\n            if (!err) {\n              vm.$message({\n                duration: 1000,\n                message: \"\\n                    Update\\n                    Successfully\\n                    !\",\n                type: 'success'\n              });\n              vm.dialogUpdatePosConvertInventory = false;\n              vm.productOpt();\n              vm.$refs[\"posConvertInventoryFormUpdate\"].resetFields();\n            } else {\n              vm.$message({\n                duration: 1000,\n                message: \"\\n                    Update\\n                    Failed\\n                    !\",\n                type: 'error'\n              });\n            }\n          });\n        }\n      });\n    },\n    removePosConvertInventory: function (index, row, rows) {\n      var _this4 = this;\n\n      var vm = this;\n\n      if (vm.isDetectedDate === true && moment().startOf(\"day\").toDate().getTime() >= row.date.getTime()) {\n        vm.$message({\n          duration: 1000,\n          message: this.langConfig['expiredDateForAction'],\n          type: 'error'\n        });\n        return false;\n      } //Check with closing stock\n\n\n      if (vm.closingStockDate && vm.closingStockDate !== \"\" && moment(vm.closingStockDate).endOf(\"day\").toDate().getTime() >= row.date.getTime()) {\n        vm.$message({\n          duration: 1000,\n          message: this.langConfig['expiredDateForAction'],\n          type: 'error'\n        });\n        return false;\n      } //Check with closing stock\n\n\n      if (vm.closeDate && vm.closeDate !== \"\" && moment(vm.closeDate).endOf(\"day\").toDate().getTime() >= row.date.getTime()) {\n        vm.$message({\n          duration: 1000,\n          message: this.langConfig['expiredDateForAction'],\n          type: 'error'\n        });\n        return false;\n      }\n\n      this.$confirm('This will permanently delete the Item. Continue?', 'Warning', {\n        confirmButtonText: 'OK',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        Meteor.call(\"removePosConvertInventory\", row._id, function (err, result) {\n          if (!err) {\n            rows.splice(index, 1);\n            vm.$message({\n              message: \"\\n                    \\u179B\\u17BB\\u1794 \" + row.code + \" : \" + row.productId + \" \\u1794\\u17B6\\u1793\\u1787\\u17C4\\u1782\\u1787\\u17D0\\u1799\",\n              type: 'success'\n            });\n          } else {\n            vm.$message({\n              type: 'error',\n              message: 'Delete Fialed'\n            });\n          }\n        });\n      }).catch(function () {\n        _this4.$message({\n          type: 'info',\n          message: 'Delete canceled'\n        });\n      });\n    },\n    popUpConvertInventoryAdd: function () {\n      var vm = this;\n\n      if (vm.closingStockDate !== \"\") {\n        if (vm.closeDate && vm.closeDate !== \"\" && vm.closingStockDate.getTime() < vm.closeDate.getTime()) {\n          vm.options = {\n            disabledDate: function (time) {\n              var min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n              return time.getTime() < min;\n            }\n          };\n          vm.posConvertInventoryForm.date = moment(vm.closeDate).add(1, \"days\").toDate();\n        } else {\n          vm.options = {\n            disabledDate: function (time) {\n              var min = moment(vm.closingStockDate).startOf(\"day\").add(1, \"days\").toDate().getTime();\n              return time.getTime() < min;\n            }\n          };\n          vm.posConvertInventoryForm.date = moment(vm.closingStockDate).add(1, \"days\").toDate();\n        }\n      }\n    },\n    popUpConvertInventoryUpdate: function (row) {\n      var vm = this;\n\n      if (vm.isDetectedDate === true && moment().startOf(\"day\").toDate().getTime() >= row.date.getTime()) {\n        vm.$message({\n          duration: 1000,\n          message: this.langConfig['expiredDateForAction'],\n          type: 'error'\n        });\n        return false;\n      } //Check with closing stock\n\n\n      if (vm.closingStockDate && vm.closingStockDate !== \"\" && moment(vm.closingStockDate).endOf(\"day\").toDate().getTime() >= row.date.getTime()) {\n        vm.$message({\n          duration: 1000,\n          message: this.langConfig['expiredDateForAction'],\n          type: 'error'\n        });\n        return false;\n      } //Check with closing stock\n\n\n      if (vm.closeDate && vm.closeDate !== \"\" && moment(vm.closeDate).endOf(\"day\").toDate().getTime() >= row.date.getTime()) {\n        vm.$message({\n          duration: 1000,\n          message: this.langConfig['expiredDateForAction'],\n          type: 'error'\n        });\n        return false;\n      }\n\n      vm.dialogUpdatePosConvertInventory = true;\n    },\n    findPosConvertInventoryById: function (doc) {\n      var vm = this;\n      vm.posConvertInventoryForm = {};\n      Meteor.call(\"queryPosConvertInventoryById\", doc.row._id, function (err, result) {\n        if (result) {\n          vm.posConvertInventoryForm._id = result._id;\n          vm.posConvertInventoryForm = result;\n          vm.convertData = result.convert || [{\n            productId: \"\",\n            qty: 0\n          }];\n        }\n      });\n    },\n    cancel: function () {\n      this.$message({\n        type: 'info',\n        message: 'Canceled'\n      });\n    },\n    resetForm: function () {\n      this.posConvertInventoryForm._id = \"\";\n      this.convertData = [{\n        productId: \"\",\n        qty: 0\n      }];\n\n      if (this.$refs[\"posConvertInventoryFormAdd\"]) {\n        this.$refs[\"posConvertInventoryFormAdd\"].resetFields();\n      }\n\n      if (this.$refs[\"posConvertInventoryFormUpdate\"]) {\n        this.$refs[\"posConvertInventoryFormUpdate\"].resetFields();\n      }\n    },\n    handleAddConvert: function () {\n      this.convertData.push({\n        productId: \"\",\n        qty: 0\n      });\n    },\n    handleEditConvert: function (index, row) {\n      this.convertData[index] = row;\n    },\n    removeConvertData: function (index, row) {\n      if (this.convertData.length > 1) {\n        this.convertData.splice(index, 1);\n        this.$message({\n          message: \"\\u179B\\u17BB\\u1794 \" + row.productId + \" \\u1794\\u17B6\\u1793\\u1787\\u17C4\\u1782\\u1787\\u17D0\\u1799\",\n          type: 'success'\n        });\n      } else {\n        this.convertData = [{\n          productId: \"\",\n          qty: 0\n        }];\n      }\n    }\n  },\n  created: function () {\n    var _this5 = this;\n\n    var vm = this;\n    this.isSearching = true;\n    this.productOpt();\n    this.locationOpt();\n    this.queryData();\n    Meteor.subscribe('Pos_ConvertInventoryReact');\n    var companyDoc = WB_waterBillingSetup.findOne({});\n    this.isDetectedDate = companyDoc.isDetectedDate; //Get Last Closing Stock\n\n    Meteor.call(\"queryLastClosingStock\", Session.get('area'), function (err, result) {\n      if (result) {\n        _this5.closingStockDate = result.closeDate;\n      } else {\n        _this5.closingStockDate = \"\";\n      }\n    }); //Get Last CLosing entry from Account\n\n    if (companyDoc.integratedPosAccount) {\n      Meteor.call(\"queryLastClosingEntry\", Session.get(\"area\"), function (err, re) {\n        if (re !== undefined) {\n          vm.closeDate = re.closeDate;\n        } else {\n          vm.closeDate = \"\";\n        }\n      });\n    }\n  },\n  computed: {\n    langConfig: function () {\n      var _this6 = this;\n\n      var data = compoLang.filter(function (config) {\n        return config.lang === _this6.langSession;\n      })[0]['convertInventory'];\n      return data;\n    }\n  }\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/activity/imports/vue/ui/posConvertInventory.vue"],"names":["compoLang","module","link","v","Pos_ConvertInventoryReact","WB_waterBillingSetup","exportDefault","meteor","langSession","Session","get","disabledRemove","disabledUpdate","newRe","vm","find","fetch","queryData","searchData","skip","currentSize","mounted","$jQuery","off","isDetectedDate","options","disabledDate","time","min","moment","startOf","toDate","getTime","data","newLoading","posConvertInventoryData","loading","isSearching","currentPage","count","dialogAddPosConvertInventory","dialogUpdatePosConvertInventory","convertData","productId","qty","posConvertInventoryForm","locationId","date","description","convert","_id","rules","required","type","message","trigger","productOption","locationOption","closingStockDate","closeDate","watch","val","methods","handleSizeChange","handleCurrentChange","indexMethod","index","_","debounce","limit","Meteor","call","q","filter","rolesArea","err","result","content","countPosConvertInventory","productOpt","query","setTimeout","console","log","locationOpt","selector","savePosConvertInventory","event","preventDefault","$refs","validate","valid","posConvertInventoryDoc","dateName","format","$message","duration","resetFields","updatePosConvertInventory","removePosConvertInventory","row","rows","langConfig","endOf","$confirm","confirmButtonText","cancelButtonText","then","splice","code","catch","popUpConvertInventoryAdd","add","popUpConvertInventoryUpdate","findPosConvertInventoryById","doc","cancel","resetForm","handleAddConvert","push","handleEditConvert","removeConvertData","length","created","subscribe","companyDoc","findOne","integratedPosAccount","re","undefined","computed","config","lang"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport compoLang from '../../../both/i18n/lang/elem-label'\nimport {Pos_ConvertInventoryReact} from \"../../collection/posConvertInventory\";\nimport {WB_waterBillingSetup} from \"../../collection/waterBillingSetup\";\n\nexport default {\n    meteor: {\n        langSession() {\n            return Session.get('lang') || \"en\";\n        },\n        disabledRemove() {\n            return Session.get(\"canRemove\");\n        },\n        disabledUpdate() {\n            return Session.get(\"canUpdate\");\n        },\n        newRe() {\n            let vm = this;\n            Pos_ConvertInventoryReact.find({}).fetch();\n            vm.queryData(vm.searchData, vm.skip, vm.currentSize + vm.skip);\n        }\n    },\n    mounted() {\n        this.$jQuery('body').off();\n        let vm = this;\n        if (vm.isDetectedDate === true) {\n            vm.options = {\n                disabledDate(time) {\n                    let min = moment().startOf(\"day\").toDate().getTime();\n                    return time.getTime() < min;\n                }\n            };\n        }\n    },\n    data() {\n        return {\n            newLoading: true,\n            posConvertInventoryData: [],\n            loading: false,\n            searchData: '',\n            isSearching: false,\n            currentPage: 1,\n            currentSize: 10,\n            count: 0,\n            dialogAddPosConvertInventory: false,\n            dialogUpdatePosConvertInventory: false,\n            convertData: [{\n                productId: \"\",\n                qty: 0\n            }],\n            posConvertInventoryForm: {\n                productId: \"\",\n                locationId: \"\",\n                qty: 0,\n                date: moment().toDate(),\n                description: \"\",\n                convert: [],\n                _id: \"\"\n            },\n            rules: {\n                productId: [{\n                    required: true, type: 'string',\n                    message: 'Please input product', trigger: 'change'\n                }],\n                locationId: [{\n                    required: true, type: 'string',\n                    message: 'Please input Location', trigger: 'change'\n                }],\n                qty: [{required: true, message: 'Please input qty', trigger: 'blur'}],\n                date: [{\n                    type: 'date',\n                    required: true,\n                    message: 'Please input Date',\n                    trigger: 'blur'\n                }],\n            },\n            // Options\n            productOption: [],\n            locationOption: [],\n            skip: 0,\n            isDetectedDate: false,\n            options: {\n                disabledDate(time) {\n                    return false;\n                }\n            },\n            disabledDate: false,\n            closingStockDate: \"\",\n            closeDate: \"\"\n        }\n    },\n    watch: {\n        currentSize(val) {\n            this.isSearching = true;\n            this.skip = (this.currentPage - 1) * val;\n            this.queryData(this.searchData, this.skip, val + this.skip);\n        },\n        currentPage(val) {\n            this.isSearching = true;\n            this.skip = (val - 1) * this.currentSize;\n            this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n        },\n        searchData(val) {\n            this.isSearching = true;\n            this.skip = (this.currentPage - 1) * this.currentSize;\n            this.queryData(val, this.skip, this.currentSize + this.skip);\n        },\n\n    },\n    methods: {\n        handleSizeChange(val) {\n            this.currentSize = val;\n        },\n        handleCurrentChange(val) {\n            this.currentPage = val;\n        },\n        indexMethod(index) {\n            return index + 1;\n        },\n        queryData: _.debounce(function (val, skip, limit) {\n            this.newLoading = true;\n            Meteor.call('queryPosConvertInventory', {\n                q: val,\n                filter: this.filter,\n                rolesArea: Session.get('area'),\n                options: {skip: skip || 0, limit: limit || 10}\n            }, (err, result) => {\n                if (!err) {\n                    this.posConvertInventoryData = result.content;\n                    this.count = result.countPosConvertInventory;\n                }\n                this.isSearching = false;\n                this.newLoading = false;\n            });\n        }, 300),\n        productOpt(query) {\n            if (!!query) {\n                setTimeout(() => {\n                    Meteor.call('queryItemOption', query, (err, result) => {\n                        if (!err) {\n                            this.productOption = result;\n                        } else {\n                            console.log(err.message);\n                        }\n                    })\n                }, 200);\n            } else {\n                Meteor.call('queryItemOption', \"\", (err, result) => {\n                    if (!err) {\n                        this.productOption = result;\n                    } else {\n                        console.log(err.message);\n                    }\n                })\n            }\n        },\n        locationOpt() {\n            let selector = {};\n            Meteor.call('queryLocationOption', selector, (err, result) => {\n                this.locationOption = result;\n            })\n        },\n        savePosConvertInventory(event) {\n            event.preventDefault();\n            let vm = this;\n            this.$refs[\"posConvertInventoryFormAdd\"].validate((valid) => {\n                if (valid) {\n                    let posConvertInventoryDoc = {\n                        productId: vm.posConvertInventoryForm.productId,\n                        locationId: vm.posConvertInventoryForm.locationId,\n                        date: vm.posConvertInventoryForm.date,\n                        dateName: moment(vm.posConvertInventoryForm.date).format(\"DD/MM/YYYY\"),\n                        qty: vm.posConvertInventoryForm.qty,\n                        convert: vm.convertData,\n                        rolesArea: Session.get('area'),\n\n                        description: vm.posConvertInventoryForm.description\n                    };\n\n                    Meteor.call(\"insertPosConvertInventory\", posConvertInventoryDoc, (err, result) => {\n                        if (!err) {\n                            vm.$message({\n                                duration: 1000,\n                                message: `Save Successfully!`,\n                                type: 'success'\n                            });\n                            vm.dialogAddPosConvertInventory = false;\n                            vm.productOpt();\n                            vm.$refs[\"posConvertInventoryFormAdd\"].resetFields();\n                        } else {\n                            vm.$message({\n                                duration: 1000,\n                                message: err.message,\n                                type: 'error'\n                            });\n                        }\n                    })\n                }\n            })\n\n        },\n        updatePosConvertInventory() {\n            let vm = this;\n            this.$refs[\"posConvertInventoryFormUpdate\"].validate((valid) => {\n                if (valid) {\n                    let posConvertInventoryDoc = {\n                        _id: vm.posConvertInventoryForm._id,\n                        productId: vm.posConvertInventoryForm.productId,\n                        locationId: vm.posConvertInventoryForm.locationId,\n                        date: vm.posConvertInventoryForm.date,\n                        dateName: moment(vm.posConvertInventoryForm.date).format(\"DD/MM/YYYY\"),\n                        qty: vm.posConvertInventoryForm.qty,\n                        convert: vm.convertData,\n                        rolesArea: Session.get('area'),\n                        description: vm.posConvertInventoryForm.description\n                    };\n\n                    Meteor.call(\"updatePosConvertInventory\", posConvertInventoryDoc, (err, result) => {\n                        if (!err) {\n                            vm.$message({\n                                duration: 1000,\n                                message: `\n                    Update\n                    Successfully\n                    !`,\n                                type: 'success'\n                            });\n                            vm.dialogUpdatePosConvertInventory = false;\n                            vm.productOpt();\n                            vm.$refs[\"posConvertInventoryFormUpdate\"].resetFields();\n                        } else {\n                            vm.$message({\n                                duration: 1000,\n                                message: `\n                    Update\n                    Failed\n                    !`,\n                                type: 'error'\n                            });\n                        }\n                    })\n                }\n            })\n\n        },\n        removePosConvertInventory(index, row, rows) {\n            let vm = this;\n\n            if (vm.isDetectedDate === true && moment().startOf(\"day\").toDate().getTime() >= row.date.getTime()) {\n                vm.$message({\n                    duration: 1000,\n                    message: this.langConfig['expiredDateForAction'],\n                    type: 'error'\n                });\n                return false;\n            }\n\n            //Check with closing stock\n            if (vm.closingStockDate && vm.closingStockDate !== \"\" && moment(vm.closingStockDate).endOf(\"day\").toDate().getTime() >= row.date.getTime()) {\n                vm.$message({\n                    duration: 1000,\n                    message: this.langConfig['expiredDateForAction'],\n                    type: 'error'\n                });\n                return false;\n            }\n\n            //Check with closing stock\n            if (vm.closeDate && vm.closeDate !== \"\" && moment(vm.closeDate).endOf(\"day\").toDate().getTime() >= row.date.getTime()) {\n                vm.$message({\n                    duration: 1000,\n                    message: this.langConfig['expiredDateForAction'],\n                    type: 'error'\n                });\n                return false;\n            }\n\n            this.$confirm('This will permanently delete the Item. Continue?', 'Warning', {\n                confirmButtonText: 'OK',\n                cancelButtonText: 'Cancel',\n                type: 'warning'\n            }).then(() => {\n                Meteor.call(\"removePosConvertInventory\", row._id, (err, result) => {\n                    if (!err) {\n                        rows.splice(index, 1);\n\n                        vm.$message({\n                            message: `\n                    លុប ${row.code} : ${row.productId} បានជោគជ័យ`,\n                            type: 'success'\n                        });\n\n                    } else {\n                        vm.$message({\n                            type: 'error',\n                            message: 'Delete Fialed'\n                        });\n                    }\n\n                })\n\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: 'Delete canceled'\n                });\n            });\n\n\n        },\n        popUpConvertInventoryAdd() {\n            let vm = this;\n            if (vm.closingStockDate !== \"\") {\n                if (vm.closeDate && vm.closeDate !== \"\" && vm.closingStockDate.getTime() < vm.closeDate.getTime()) {\n                    vm.options = {\n                        disabledDate(time) {\n                            let min = moment(vm.closeDate).add(1, \"days\").toDate().getTime();\n                            return time.getTime() < min;\n                        }\n                    };\n                    vm.posConvertInventoryForm.date = moment(vm.closeDate).add(1, \"days\").toDate();\n                } else {\n                    vm.options = {\n                        disabledDate(time) {\n                            let min = moment(vm.closingStockDate).startOf(\"day\").add(1, \"days\").toDate().getTime();\n                            return time.getTime() < min;\n                        }\n                    };\n                    vm.posConvertInventoryForm.date = moment(vm.closingStockDate).add(1, \"days\").toDate();\n                }\n            }\n        },\n        popUpConvertInventoryUpdate(row) {\n            let vm = this;\n            if (vm.isDetectedDate === true && moment().startOf(\"day\").toDate().getTime() >= row.date.getTime()) {\n                vm.$message({\n                    duration: 1000,\n                    message: this.langConfig['expiredDateForAction'],\n                    type: 'error'\n                });\n                return false;\n            }\n\n\n            //Check with closing stock\n            if (vm.closingStockDate && vm.closingStockDate !== \"\" && moment(vm.closingStockDate).endOf(\"day\").toDate().getTime() >= row.date.getTime()) {\n                vm.$message({\n                    duration: 1000,\n                    message: this.langConfig['expiredDateForAction'],\n                    type: 'error'\n                });\n                return false;\n            }\n\n            //Check with closing stock\n            if (vm.closeDate && vm.closeDate !== \"\" && moment(vm.closeDate).endOf(\"day\").toDate().getTime() >= row.date.getTime()) {\n                vm.$message({\n                    duration: 1000,\n                    message: this.langConfig['expiredDateForAction'],\n                    type: 'error'\n                });\n                return false;\n            }\n\n            vm.dialogUpdatePosConvertInventory = true;\n        },\n        findPosConvertInventoryById(doc) {\n            let vm = this;\n            vm.posConvertInventoryForm = {};\n\n            Meteor.call(\"queryPosConvertInventoryById\", doc.row._id, (err, result) => {\n                if (result) {\n                    vm.posConvertInventoryForm._id = result._id;\n                    vm.posConvertInventoryForm = result;\n                    vm.convertData = result.convert || [{\n                        productId: \"\",\n                        qty: 0\n                    }];\n                }\n            })\n        },\n\n        cancel() {\n            this.$message({\n                type: 'info',\n                message: 'Canceled'\n            });\n        },\n        resetForm() {\n            this.posConvertInventoryForm._id = \"\";\n\n            this.convertData = [{\n                productId: \"\",\n                qty: 0\n            }];\n            if (this.$refs[\"posConvertInventoryFormAdd\"]) {\n                this.$refs[\"posConvertInventoryFormAdd\"].resetFields();\n            }\n\n            if (this.$refs[\"posConvertInventoryFormUpdate\"]) {\n                this.$refs[\"posConvertInventoryFormUpdate\"].resetFields();\n            }\n\n        },\n        handleAddConvert() {\n            this.convertData.push({\n                productId: \"\",\n                qty: 0\n            })\n        },\n        handleEditConvert(index, row) {\n            this.convertData[index] = row;\n        },\n        removeConvertData(index, row) {\n            if (this.convertData.length > 1) {\n                this.convertData.splice(index, 1);\n                this.$message({\n                    message: `លុប ${row.productId} បានជោគជ័យ`,\n                    type: 'success'\n                });\n            } else {\n                this.convertData = [{\n                    productId: \"\",\n                    qty: 0\n                }];\n            }\n        }\n    },\n    created() {\n        let vm = this;\n        this.isSearching = true;\n        this.productOpt();\n        this.locationOpt();\n        this.queryData();\n        Meteor.subscribe('Pos_ConvertInventoryReact');\n        let companyDoc = WB_waterBillingSetup.findOne({});\n        this.isDetectedDate = companyDoc.isDetectedDate;\n        //Get Last Closing Stock\n        Meteor.call(\"queryLastClosingStock\", Session.get('area'), (err, result) => {\n            if (result) {\n                this.closingStockDate = result.closeDate;\n            } else {\n                this.closingStockDate = \"\";\n            }\n        })\n        //Get Last CLosing entry from Account\n        if (companyDoc.integratedPosAccount) {\n            Meteor.call(\"queryLastClosingEntry\", Session.get(\"area\"), function (err, re) {\n                if (re !== undefined) {\n                    vm.closeDate = re.closeDate;\n                } else {\n                    vm.closeDate = \"\";\n                }\n            })\n        }\n    },\n    computed: {\n        langConfig() {\n            let data = compoLang.filter(config => config.lang === this.langSession)[0]['convertInventory'];\n            return data;\n        }\n    }\n}\n"]},"sourceType":"script","hash":"8449b3c036075b08e59cb50c265e0b950918fd53"}
